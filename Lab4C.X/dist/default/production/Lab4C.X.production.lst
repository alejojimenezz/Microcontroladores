

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jul 16 19:11:54 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 25/07/2024 GMT
    32                           ; 
    33                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000FE0                     bsr             equ	4064
    66   000FE9                     fsr0            equ	4073
    67   000FEA                     fsr0h           equ	4074
    68   000FE9                     fsr0l           equ	4073
    69   000FE1                     fsr1            equ	4065
    70   000FE2                     fsr1h           equ	4066
    71   000FE1                     fsr1l           equ	4065
    72   000FD9                     fsr2            equ	4057
    73   000FDA                     fsr2h           equ	4058
    74   000FD9                     fsr2l           equ	4057
    75   000FEF                     indf0           equ	4079
    76   000FE7                     indf1           equ	4071
    77   000FDF                     indf2           equ	4063
    78   000FF2                     intcon          equ	4082
    79   000000                     nvmcon          equ	0
    80   000FF9                     pcl             equ	4089
    81   000FFA                     pclath          equ	4090
    82   000FFB                     pclatu          equ	4091
    83   000FEB                     plusw0          equ	4075
    84   000FE3                     plusw1          equ	4067
    85   000FDB                     plusw2          equ	4059
    86   000FED                     postdec0        equ	4077
    87   000FE5                     postdec1        equ	4069
    88   000FDD                     postdec2        equ	4061
    89   000FEE                     postinc0        equ	4078
    90   000FE6                     postinc1        equ	4070
    91   000FDE                     postinc2        equ	4062
    92   000FEC                     preinc0         equ	4076
    93   000FE4                     preinc1         equ	4068
    94   000FDC                     preinc2         equ	4060
    95   000FF3                     prod            equ	4083
    96   000FF4                     prodh           equ	4084
    97   000FF3                     prodl           equ	4083
    98   000FD8                     status          equ	4056
    99   000FF5                     tablat          equ	4085
   100   000FF6                     tblptr          equ	4086
   101   000FF7                     tblptrh         equ	4087
   102   000FF6                     tblptrl         equ	4086
   103   000FF8                     tblptru         equ	4088
   104   000FFD                     tosl            equ	4093
   105   000FE8                     wreg            equ	4072
   106   000F62                     SPPDATA         equ	3938	;# 
   107   000F63                     SPPCFG          equ	3939	;# 
   108   000F64                     SPPEPS          equ	3940	;# 
   109   000F65                     SPPCON          equ	3941	;# 
   110   000F66                     UFRM            equ	3942	;# 
   111   000F66                     UFRML           equ	3942	;# 
   112   000F67                     UFRMH           equ	3943	;# 
   113   000F68                     UIR             equ	3944	;# 
   114   000F69                     UIE             equ	3945	;# 
   115   000F6A                     UEIR            equ	3946	;# 
   116   000F6B                     UEIE            equ	3947	;# 
   117   000F6C                     USTAT           equ	3948	;# 
   118   000F6D                     UCON            equ	3949	;# 
   119   000F6E                     UADDR           equ	3950	;# 
   120   000F6F                     UCFG            equ	3951	;# 
   121   000F70                     UEP0            equ	3952	;# 
   122   000F71                     UEP1            equ	3953	;# 
   123   000F72                     UEP2            equ	3954	;# 
   124   000F73                     UEP3            equ	3955	;# 
   125   000F74                     UEP4            equ	3956	;# 
   126   000F75                     UEP5            equ	3957	;# 
   127   000F76                     UEP6            equ	3958	;# 
   128   000F77                     UEP7            equ	3959	;# 
   129   000F78                     UEP8            equ	3960	;# 
   130   000F79                     UEP9            equ	3961	;# 
   131   000F7A                     UEP10           equ	3962	;# 
   132   000F7B                     UEP11           equ	3963	;# 
   133   000F7C                     UEP12           equ	3964	;# 
   134   000F7D                     UEP13           equ	3965	;# 
   135   000F7E                     UEP14           equ	3966	;# 
   136   000F7F                     UEP15           equ	3967	;# 
   137   000F80                     PORTA           equ	3968	;# 
   138   000F81                     PORTB           equ	3969	;# 
   139   000F82                     PORTC           equ	3970	;# 
   140   000F83                     PORTD           equ	3971	;# 
   141   000F84                     PORTE           equ	3972	;# 
   142   000F89                     LATA            equ	3977	;# 
   143   000F8A                     LATB            equ	3978	;# 
   144   000F8B                     LATC            equ	3979	;# 
   145   000F8C                     LATD            equ	3980	;# 
   146   000F8D                     LATE            equ	3981	;# 
   147   000F92                     TRISA           equ	3986	;# 
   148   000F92                     DDRA            equ	3986	;# 
   149   000F93                     TRISB           equ	3987	;# 
   150   000F93                     DDRB            equ	3987	;# 
   151   000F94                     TRISC           equ	3988	;# 
   152   000F94                     DDRC            equ	3988	;# 
   153   000F95                     TRISD           equ	3989	;# 
   154   000F95                     DDRD            equ	3989	;# 
   155   000F96                     TRISE           equ	3990	;# 
   156   000F96                     DDRE            equ	3990	;# 
   157   000F9B                     OSCTUNE         equ	3995	;# 
   158   000F9D                     PIE1            equ	3997	;# 
   159   000F9E                     PIR1            equ	3998	;# 
   160   000F9F                     IPR1            equ	3999	;# 
   161   000FA0                     PIE2            equ	4000	;# 
   162   000FA1                     PIR2            equ	4001	;# 
   163   000FA2                     IPR2            equ	4002	;# 
   164   000FA6                     EECON1          equ	4006	;# 
   165   000FA7                     EECON2          equ	4007	;# 
   166   000FA8                     EEDATA          equ	4008	;# 
   167   000FA9                     EEADR           equ	4009	;# 
   168   000FAB                     RCSTA           equ	4011	;# 
   169   000FAB                     RCSTA1          equ	4011	;# 
   170   000FAC                     TXSTA           equ	4012	;# 
   171   000FAC                     TXSTA1          equ	4012	;# 
   172   000FAD                     TXREG           equ	4013	;# 
   173   000FAD                     TXREG1          equ	4013	;# 
   174   000FAE                     RCREG           equ	4014	;# 
   175   000FAE                     RCREG1          equ	4014	;# 
   176   000FAF                     SPBRG           equ	4015	;# 
   177   000FAF                     SPBRG1          equ	4015	;# 
   178   000FB0                     SPBRGH          equ	4016	;# 
   179   000FB1                     T3CON           equ	4017	;# 
   180   000FB2                     TMR3            equ	4018	;# 
   181   000FB2                     TMR3L           equ	4018	;# 
   182   000FB3                     TMR3H           equ	4019	;# 
   183   000FB4                     CMCON           equ	4020	;# 
   184   000FB5                     CVRCON          equ	4021	;# 
   185   000FB6                     ECCP1AS         equ	4022	;# 
   186   000FB6                     CCP1AS          equ	4022	;# 
   187   000FB7                     ECCP1DEL        equ	4023	;# 
   188   000FB7                     CCP1DEL         equ	4023	;# 
   189   000FB8                     BAUDCON         equ	4024	;# 
   190   000FB8                     BAUDCTL         equ	4024	;# 
   191   000FBA                     CCP2CON         equ	4026	;# 
   192   000FBB                     CCPR2           equ	4027	;# 
   193   000FBB                     CCPR2L          equ	4027	;# 
   194   000FBC                     CCPR2H          equ	4028	;# 
   195   000FBD                     CCP1CON         equ	4029	;# 
   196   000FBD                     ECCP1CON        equ	4029	;# 
   197   000FBE                     CCPR1           equ	4030	;# 
   198   000FBE                     CCPR1L          equ	4030	;# 
   199   000FBF                     CCPR1H          equ	4031	;# 
   200   000FC0                     ADCON2          equ	4032	;# 
   201   000FC1                     ADCON1          equ	4033	;# 
   202   000FC2                     ADCON0          equ	4034	;# 
   203   000FC3                     ADRES           equ	4035	;# 
   204   000FC3                     ADRESL          equ	4035	;# 
   205   000FC4                     ADRESH          equ	4036	;# 
   206   000FC5                     SSPCON2         equ	4037	;# 
   207   000FC6                     SSPCON1         equ	4038	;# 
   208   000FC7                     SSPSTAT         equ	4039	;# 
   209   000FC8                     SSPADD          equ	4040	;# 
   210   000FC9                     SSPBUF          equ	4041	;# 
   211   000FCA                     T2CON           equ	4042	;# 
   212   000FCB                     PR2             equ	4043	;# 
   213   000FCB                     MEMCON          equ	4043	;# 
   214   000FCC                     TMR2            equ	4044	;# 
   215   000FCD                     T1CON           equ	4045	;# 
   216   000FCE                     TMR1            equ	4046	;# 
   217   000FCE                     TMR1L           equ	4046	;# 
   218   000FCF                     TMR1H           equ	4047	;# 
   219   000FD0                     RCON            equ	4048	;# 
   220   000FD1                     WDTCON          equ	4049	;# 
   221   000FD2                     HLVDCON         equ	4050	;# 
   222   000FD2                     LVDCON          equ	4050	;# 
   223   000FD3                     OSCCON          equ	4051	;# 
   224   000FD5                     T0CON           equ	4053	;# 
   225   000FD6                     TMR0            equ	4054	;# 
   226   000FD6                     TMR0L           equ	4054	;# 
   227   000FD7                     TMR0H           equ	4055	;# 
   228   000FD8                     STATUS          equ	4056	;# 
   229   000FD9                     FSR2            equ	4057	;# 
   230   000FD9                     FSR2L           equ	4057	;# 
   231   000FDA                     FSR2H           equ	4058	;# 
   232   000FDB                     PLUSW2          equ	4059	;# 
   233   000FDC                     PREINC2         equ	4060	;# 
   234   000FDD                     POSTDEC2        equ	4061	;# 
   235   000FDE                     POSTINC2        equ	4062	;# 
   236   000FDF                     INDF2           equ	4063	;# 
   237   000FE0                     BSR             equ	4064	;# 
   238   000FE1                     FSR1            equ	4065	;# 
   239   000FE1                     FSR1L           equ	4065	;# 
   240   000FE2                     FSR1H           equ	4066	;# 
   241   000FE3                     PLUSW1          equ	4067	;# 
   242   000FE4                     PREINC1         equ	4068	;# 
   243   000FE5                     POSTDEC1        equ	4069	;# 
   244   000FE6                     POSTINC1        equ	4070	;# 
   245   000FE7                     INDF1           equ	4071	;# 
   246   000FE8                     WREG            equ	4072	;# 
   247   000FE9                     FSR0            equ	4073	;# 
   248   000FE9                     FSR0L           equ	4073	;# 
   249   000FEA                     FSR0H           equ	4074	;# 
   250   000FEB                     PLUSW0          equ	4075	;# 
   251   000FEC                     PREINC0         equ	4076	;# 
   252   000FED                     POSTDEC0        equ	4077	;# 
   253   000FEE                     POSTINC0        equ	4078	;# 
   254   000FEF                     INDF0           equ	4079	;# 
   255   000FF0                     INTCON3         equ	4080	;# 
   256   000FF1                     INTCON2         equ	4081	;# 
   257   000FF2                     INTCON          equ	4082	;# 
   258   000FF3                     PROD            equ	4083	;# 
   259   000FF3                     PRODL           equ	4083	;# 
   260   000FF4                     PRODH           equ	4084	;# 
   261   000FF5                     TABLAT          equ	4085	;# 
   262   000FF6                     TBLPTR          equ	4086	;# 
   263   000FF6                     TBLPTRL         equ	4086	;# 
   264   000FF7                     TBLPTRH         equ	4087	;# 
   265   000FF8                     TBLPTRU         equ	4088	;# 
   266   000FF9                     PCLAT           equ	4089	;# 
   267   000FF9                     PC              equ	4089	;# 
   268   000FF9                     PCL             equ	4089	;# 
   269   000FFA                     PCLATH          equ	4090	;# 
   270   000FFB                     PCLATU          equ	4091	;# 
   271   000FFC                     STKPTR          equ	4092	;# 
   272   000FFD                     TOS             equ	4093	;# 
   273   000FFD                     TOSL            equ	4093	;# 
   274   000FFE                     TOSH            equ	4094	;# 
   275   000FFF                     TOSU            equ	4095	;# 
   276                           
   277                           	psect	idataCOMRAM
   278   000EBE                     __pidataCOMRAM:
   279                           	callstack 0
   280                           
   281                           ;initializer for _interfaz
   282   000EBE  08                 	db	8
   283   007F92                     _TMR0IF         set	32658
   284   007C0F                     _RB7            set	31759
   285   007C0E                     _RB6            set	31758
   286   007C0D                     _RB5            set	31757
   287   007C0C                     _RB4            set	31756
   288   007F97                     _GIE            set	32663
   289   007F93                     _RBIE           set	32659
   290   007F90                     _RBIF           set	32656
   291   007F8F                     _RBPU           set	32655
   292   007C61                     _LATD1          set	31841
   293   007C60                     _LATD0          set	31840
   294   000FD6                     _TMR0           set	4054
   295   000F81                     _PORTB          set	3969
   296   000F8A                     _LATB           set	3978
   297   000F95                     _TRISD          set	3989
   298   000F93                     _TRISB          set	3987
   299   000F8C                     _LATD           set	3980
   300                           
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304   000E34                     __pcinit:
   305                           	callstack 0
   306   000E34                     start_initialization:
   307                           	callstack 0
   308   000E34                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to COMRAM (1 bytes)
   312                           ; load TBLPTR registers with __pidataCOMRAM
   313   000E34  0EBE               	movlw	low __pidataCOMRAM
   314   000E36  6EF6               	movwf	tblptrl,c
   315   000E38  0E0E               	movlw	high __pidataCOMRAM
   316   000E3A  6EF7               	movwf	tblptrh,c
   317   000E3C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   318   000E3E  6EF8               	movwf	tblptru,c
   319   000E40  0009               	tblrd		*+	;fetch initializer
   320   000E42  CFF5 F016          	movff	tablat,__pdataCOMRAM
   321                           
   322                           ; Clear objects allocated to COMRAM (2 bytes)
   323   000E46  6A15               	clrf	(__pbssCOMRAM+1)& (0+255),c
   324   000E48  6A14               	clrf	__pbssCOMRAM& (0+255),c
   325   000E4A                     end_of_initialization:
   326                           	callstack 0
   327   000E4A                     __end_of__initialization:
   328                           	callstack 0
   329   000E4A  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   330   000E4C  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   331   000E4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   332   000E50  6EF8               	movwf	tblptru,c
   333   000E52  0100               	movlb	0
   334   000E54  EF01  F004         	goto	_main	;jump to C main() function
   335                           
   336                           	psect	bssCOMRAM
   337   000014                     __pbssCOMRAM:
   338                           	callstack 0
   339   000014                     _piezasAContar:
   340                           	callstack 0
   341   000014                     	ds	1
   342   000015                     _Tecla:
   343                           	callstack 0
   344   000015                     	ds	1
   345                           
   346                           	psect	dataCOMRAM
   347   000016                     __pdataCOMRAM:
   348                           	callstack 0
   349   000016                     _interfaz:
   350                           	callstack 0
   351   000016                     	ds	1
   352                           
   353                           	psect	cstackCOMRAM
   354   000001                     __pcstackCOMRAM:
   355                           	callstack 0
   356   000001                     ??_ISR:
   357                           
   358                           ; 1 bytes @ 0x0
   359   000001                     	ds	1
   360   000002                     ConfiguraLCD@a:
   361                           	callstack 0
   362   000002                     ___lbmod@divisor:
   363                           	callstack 0
   364   000002                     ??_RetardoLCD:
   365   000002                     
   366                           ; 1 bytes @ 0x1
   367   000002                     	ds	1
   368   000003                     RetardoLCD@a:
   369                           	callstack 0
   370   000003                     ___lbmod@dividend:
   371                           	callstack 0
   372   000003                     
   373                           ; 1 bytes @ 0x2
   374   000003                     	ds	1
   375   000004                     ___lbmod@counter:
   376                           	callstack 0
   377   000004                     ??_EnviaDato:
   378                           
   379                           ; 1 bytes @ 0x3
   380   000004                     	ds	1
   381   000005                     EnviaDato@a:
   382                           	callstack 0
   383   000005                     ___lbmod@rem:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x4
   387   000005                     	ds	1
   388   000006                     EscribeLCD_c@a:
   389                           	callstack 0
   390   000006                     DireccionaLCD@a:
   391                           	callstack 0
   392   000006                     ___lbdiv@divisor:
   393                           	callstack 0
   394   000006                     
   395                           ; 1 bytes @ 0x5
   396   000006                     	ds	1
   397   000007                     ___lbdiv@dividend:
   398                           	callstack 0
   399   000007                     
   400                           ; 1 bytes @ 0x6
   401   000007                     	ds	1
   402   000008                     ___lbdiv@counter:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x7
   406   000008                     	ds	1
   407   000009                     ___lbdiv@quotient:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x8
   411   000009                     	ds	1
   412   00000A                     EscribeLCD_n8@b:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x9
   416   00000A                     	ds	1
   417   00000B                     EscribeLCD_n8@centena:
   418                           	callstack 0
   419   00000B                     
   420                           ; 1 bytes @ 0xA
   421   00000B                     	ds	1
   422   00000C                     EscribeLCD_n8@decena:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0xB
   426   00000C                     	ds	1
   427   00000D                     EscribeLCD_n8@unidad:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0xC
   431   00000D                     	ds	1
   432   00000E                     EscribeLCD_n8@a:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0xD
   436   00000E                     	ds	1
   437   00000F                     ??_main:
   438                           
   439                           ; 1 bytes @ 0xE
   440   00000F                     	ds	2
   441   000011                     _main$118:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x10
   445   000011                     	ds	2
   446   000013                     main@numero:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x12
   450   000013                     	ds	1
   451                           
   452 ;;
   453 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   454 ;;
   455 ;; *************** function _main *****************
   456 ;; Defined at:
   457 ;;		line 16 in file "Lab4C.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;  numero          1   18[COMRAM] unsigned char 
   462 ;;  i               1    0        unsigned char 
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   472 ;;      Params:         0       0       0       0       0       0       0       0       0
   473 ;;      Locals:         3       0       0       0       0       0       0       0       0
   474 ;;      Temps:          2       0       0       0       0       0       0       0       0
   475 ;;      Totals:         5       0       0       0       0       0       0       0       0
   476 ;;Total ram usage:        5 bytes
   477 ;; Hardware stack levels required when called: 5
   478 ;; This function calls:
   479 ;;		_BorraLCD
   480 ;;		_ConfiguraLCD
   481 ;;		_DireccionaLCD
   482 ;;		_EscribeLCD_c
   483 ;;		_EscribeLCD_n8
   484 ;;		_InicializaLCD
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	text0
   491   000802                     __ptext0:
   492                           	callstack 0
   493   000802                     _main:
   494                           	callstack 26
   495                           
   496                           ;Lab4C.c: 17: unsigned char i;;Lab4C.c: 18: TRISB=0b11110000;
   497                           
   498                           ;incstack = 0
   499   000802  0EF0               	movlw	240
   500   000804  6E93               	movwf	147,c	;volatile
   501                           
   502                           ;Lab4C.c: 19: TRISD=0;
   503   000806  6A95               	clrf	149,c	;volatile
   504                           
   505                           ;Lab4C.c: 20: LATB=0b00000000;
   506   000808  6A8A               	clrf	138,c	;volatile
   507                           
   508                           ;Lab4C.c: 21: LATD=0;
   509   00080A  6A8C               	clrf	140,c	;volatile
   510                           
   511                           ;Lab4C.c: 22: RBPU=0;
   512   00080C  9EF1               	bcf	4081,7,c	;volatile
   513                           
   514                           ;Lab4C.c: 23: _delay((unsigned long)((100)*(1000000/4000.0)));
   515   00080E  0E21               	movlw	33
   516   000810  6E0F               	movwf	??_main^0,c
   517   000812  0E76               	movlw	118
   518   000814                     u547:
   519   000814  2EE8               	decfsz	wreg,f,c
   520   000816  D7FE               	bra	u547
   521   000818  2E0F               	decfsz	??_main^0,f,c
   522   00081A  D7FC               	bra	u547
   523   00081C  D000               	nop2	
   524                           
   525                           ;Lab4C.c: 24: RBIF=0;
   526   00081E  90F2               	bcf	4082,0,c	;volatile
   527                           
   528                           ;Lab4C.c: 25: RBIE=1;
   529   000820  86F2               	bsf	4082,3,c	;volatile
   530                           
   531                           ;Lab4C.c: 26: GIE=1;
   532   000822  8EF2               	bsf	4082,7,c	;volatile
   533                           
   534                           ;Lab4C.c: 27: _delay((unsigned long)((1000)*(1000000/4000.0)));
   535   000824  0E02               	movlw	2
   536   000826  6E10               	movwf	(??_main+1)^0,c
   537   000828  0E45               	movlw	69
   538   00082A  6E0F               	movwf	??_main^0,c
   539   00082C  0EAA               	movlw	170
   540   00082E                     u557:
   541   00082E  2EE8               	decfsz	wreg,f,c
   542   000830  D7FE               	bra	u557
   543   000832  2E0F               	decfsz	??_main^0,f,c
   544   000834  D7FC               	bra	u557
   545   000836  2E10               	decfsz	(??_main+1)^0,f,c
   546   000838  D7FA               	bra	u557
   547                           
   548                           ;Lab4C.c: 28: ConfiguraLCD(4);
   549   00083A  0E04               	movlw	4
   550   00083C  EC2C  F007         	call	_ConfiguraLCD
   551                           
   552                           ;Lab4C.c: 29: InicializaLCD();
   553   000840  EC46  F006         	call	_InicializaLCD	;wreg free
   554                           
   555                           ;Lab4C.c: 31: EscribeLCD_c('B');
   556   000844  0E42               	movlw	66
   557   000846  EC38  F007         	call	_EscribeLCD_c
   558                           
   559                           ;Lab4C.c: 32: EscribeLCD_c('i');
   560   00084A  0E69               	movlw	105
   561   00084C  EC38  F007         	call	_EscribeLCD_c
   562                           
   563                           ;Lab4C.c: 33: EscribeLCD_c('e');
   564   000850  0E65               	movlw	101
   565   000852  EC38  F007         	call	_EscribeLCD_c
   566                           
   567                           ;Lab4C.c: 34: EscribeLCD_c('n');
   568   000856  0E6E               	movlw	110
   569   000858  EC38  F007         	call	_EscribeLCD_c
   570                           
   571                           ;Lab4C.c: 35: EscribeLCD_c('v');
   572   00085C  0E76               	movlw	118
   573   00085E  EC38  F007         	call	_EscribeLCD_c
   574                           
   575                           ;Lab4C.c: 36: EscribeLCD_c('e');
   576   000862  0E65               	movlw	101
   577   000864  EC38  F007         	call	_EscribeLCD_c
   578                           
   579                           ;Lab4C.c: 37: EscribeLCD_c('n');
   580   000868  0E6E               	movlw	110
   581   00086A  EC38  F007         	call	_EscribeLCD_c
   582                           
   583                           ;Lab4C.c: 38: EscribeLCD_c('i');
   584   00086E  0E69               	movlw	105
   585   000870  EC38  F007         	call	_EscribeLCD_c
   586                           
   587                           ;Lab4C.c: 39: EscribeLCD_c('d');
   588   000874  0E64               	movlw	100
   589   000876  EC38  F007         	call	_EscribeLCD_c
   590                           
   591                           ;Lab4C.c: 40: EscribeLCD_c('o');
   592   00087A  0E6F               	movlw	111
   593   00087C  EC38  F007         	call	_EscribeLCD_c
   594                           
   595                           ;Lab4C.c: 41: EscribeLCD_c('s');
   596   000880  0E73               	movlw	115
   597   000882  EC38  F007         	call	_EscribeLCD_c
   598                           
   599                           ;Lab4C.c: 42: EscribeLCD_c(' ');
   600   000886  0E20               	movlw	32
   601   000888  EC38  F007         	call	_EscribeLCD_c
   602                           
   603                           ;Lab4C.c: 43: EscribeLCD_c('c');
   604   00088C  0E63               	movlw	99
   605   00088E  EC38  F007         	call	_EscribeLCD_c
   606                           
   607                           ;Lab4C.c: 44: EscribeLCD_c(':');
   608   000892  0E3A               	movlw	58
   609   000894  EC38  F007         	call	_EscribeLCD_c
   610                           
   611                           ;Lab4C.c: 46: _delay((unsigned long)((5000)*(1000000/4000.0)));
   612   000898  0E07               	movlw	7
   613   00089A  6E10               	movwf	(??_main+1)^0,c
   614   00089C  0E58               	movlw	88
   615   00089E  6E0F               	movwf	??_main^0,c
   616   0008A0  0E5A               	movlw	90
   617   0008A2                     u567:
   618   0008A2  2EE8               	decfsz	wreg,f,c
   619   0008A4  D7FE               	bra	u567
   620   0008A6  2E0F               	decfsz	??_main^0,f,c
   621   0008A8  D7FC               	bra	u567
   622   0008AA  2E10               	decfsz	(??_main+1)^0,f,c
   623   0008AC  D7FA               	bra	u567
   624                           
   625                           ;Lab4C.c: 47: BorraLCD();
   626   0008AE  EC4E  F007         	call	_BorraLCD	;wreg free
   627                           
   628                           ;Lab4C.c: 48: DireccionaLCD(0x80);
   629   0008B2  0E80               	movlw	128
   630   0008B4  EC43  F007         	call	_DireccionaLCD
   631                           
   632                           ;Lab4C.c: 49: EscribeLCD_c('P');
   633   0008B8  0E50               	movlw	80
   634   0008BA  EC38  F007         	call	_EscribeLCD_c
   635                           
   636                           ;Lab4C.c: 50: EscribeLCD_c('i');
   637   0008BE  0E69               	movlw	105
   638   0008C0  EC38  F007         	call	_EscribeLCD_c
   639                           
   640                           ;Lab4C.c: 51: EscribeLCD_c('e');
   641   0008C4  0E65               	movlw	101
   642   0008C6  EC38  F007         	call	_EscribeLCD_c
   643                           
   644                           ;Lab4C.c: 52: EscribeLCD_c('z');
   645   0008CA  0E7A               	movlw	122
   646   0008CC  EC38  F007         	call	_EscribeLCD_c
   647                           
   648                           ;Lab4C.c: 53: EscribeLCD_c('a');
   649   0008D0  0E61               	movlw	97
   650   0008D2  EC38  F007         	call	_EscribeLCD_c
   651                           
   652                           ;Lab4C.c: 54: EscribeLCD_c('s');
   653   0008D6  0E73               	movlw	115
   654   0008D8  EC38  F007         	call	_EscribeLCD_c
   655                           
   656                           ;Lab4C.c: 55: EscribeLCD_c(' ');
   657   0008DC  0E20               	movlw	32
   658   0008DE  EC38  F007         	call	_EscribeLCD_c
   659                           
   660                           ;Lab4C.c: 56: EscribeLCD_c('a');
   661   0008E2  0E61               	movlw	97
   662   0008E4  EC38  F007         	call	_EscribeLCD_c
   663                           
   664                           ;Lab4C.c: 57: EscribeLCD_c(' ');
   665   0008E8  0E20               	movlw	32
   666   0008EA  EC38  F007         	call	_EscribeLCD_c
   667                           
   668                           ;Lab4C.c: 58: EscribeLCD_c('c');
   669   0008EE  0E63               	movlw	99
   670   0008F0  EC38  F007         	call	_EscribeLCD_c
   671                           
   672                           ;Lab4C.c: 59: EscribeLCD_c('o');
   673   0008F4  0E6F               	movlw	111
   674   0008F6  EC38  F007         	call	_EscribeLCD_c
   675                           
   676                           ;Lab4C.c: 60: EscribeLCD_c('n');
   677   0008FA  0E6E               	movlw	110
   678   0008FC  EC38  F007         	call	_EscribeLCD_c
   679                           
   680                           ;Lab4C.c: 61: EscribeLCD_c('t');
   681   000900  0E74               	movlw	116
   682   000902  EC38  F007         	call	_EscribeLCD_c
   683                           
   684                           ;Lab4C.c: 62: EscribeLCD_c('a');
   685   000906  0E61               	movlw	97
   686   000908  EC38  F007         	call	_EscribeLCD_c
   687                           
   688                           ;Lab4C.c: 63: EscribeLCD_c('r');
   689   00090C  0E72               	movlw	114
   690   00090E  EC38  F007         	call	_EscribeLCD_c
   691                           
   692                           ;Lab4C.c: 64: EscribeLCD_c(':');
   693   000912  0E3A               	movlw	58
   694   000914  EC38  F007         	call	_EscribeLCD_c
   695                           
   696                           ;Lab4C.c: 65: EscribeLCD_c(' ');
   697   000918  0E20               	movlw	32
   698   00091A  EC38  F007         	call	_EscribeLCD_c
   699                           
   700                           ;Lab4C.c: 67: DireccionaLCD(0xC0);
   701   00091E  0EC0               	movlw	192
   702   000920  EC43  F007         	call	_DireccionaLCD
   703   000924                     l1640:
   704                           
   705                           ;Lab4C.c: 78: if(Tecla<=10) {
   706   000924  0E0B               	movlw	11
   707   000926  6015               	cpfslt	_Tecla^0,c
   708   000928  D055               	goto	l1660
   709                           
   710                           ;Lab4C.c: 79: unsigned char numero = (Tecla == 10) ? 0:Tecla;
   711   00092A  0E0A               	movlw	10
   712   00092C  1815               	xorwf	_Tecla^0,w,c
   713   00092E  B4D8               	btfsc	status,2,c
   714   000930  D004               	goto	l1646
   715   000932  C015  F011         	movff	_Tecla,_main$118
   716   000936  6A12               	clrf	(_main$118+1)^0,c
   717   000938  D004               	goto	l1648
   718   00093A                     l1646:
   719   00093A  0E00               	movlw	0
   720   00093C  6E12               	movwf	(_main$118+1)^0,c
   721   00093E  0E00               	movlw	0
   722   000940  6E11               	movwf	_main$118^0,c
   723   000942                     l1648:
   724   000942  C011  F013         	movff	_main$118,main@numero
   725                           
   726                           ;Lab4C.c: 80: piezasAContar = piezasAContar*10 + numero;
   727   000946  5014               	movf	_piezasAContar^0,w,c
   728   000948  0D0A               	mullw	10
   729   00094A  50F3               	movf	243,w,c
   730   00094C  2413               	addwf	main@numero^0,w,c
   731   00094E  6E14               	movwf	_piezasAContar^0,c
   732                           
   733                           ;Lab4C.c: 81: EscribeLCD_n8(piezasAContar, 2);
   734   000950  0E02               	movlw	2
   735   000952  6E0A               	movwf	EscribeLCD_n8@b^0,c
   736   000954  5014               	movf	_piezasAContar^0,w,c
   737   000956  EC6A  F005         	call	_EscribeLCD_n8
   738                           
   739                           ;Lab4C.c: 83: if(piezasAContar > 59) {
   740   00095A  0E3B               	movlw	59
   741   00095C  6414               	cpfsgt	_piezasAContar^0,c
   742   00095E  D7E2               	goto	l1640
   743                           
   744                           ;Lab4C.c: 84: piezasAContar = 0;
   745   000960  6A14               	clrf	_piezasAContar^0,c
   746                           
   747                           ;Lab4C.c: 85: BorraLCD();
   748   000962  EC4E  F007         	call	_BorraLCD	;wreg free
   749                           
   750                           ;Lab4C.c: 86: DireccionaLCD(0x80);
   751   000966  0E80               	movlw	128
   752   000968  EC43  F007         	call	_DireccionaLCD
   753                           
   754                           ;Lab4C.c: 87: EscribeLCD_c('P');
   755   00096C  0E50               	movlw	80
   756   00096E  EC38  F007         	call	_EscribeLCD_c
   757                           
   758                           ;Lab4C.c: 88: EscribeLCD_c('i');
   759   000972  0E69               	movlw	105
   760   000974  EC38  F007         	call	_EscribeLCD_c
   761                           
   762                           ;Lab4C.c: 89: EscribeLCD_c('e');
   763   000978  0E65               	movlw	101
   764   00097A  EC38  F007         	call	_EscribeLCD_c
   765                           
   766                           ;Lab4C.c: 90: EscribeLCD_c('z');
   767   00097E  0E7A               	movlw	122
   768   000980  EC38  F007         	call	_EscribeLCD_c
   769                           
   770                           ;Lab4C.c: 91: EscribeLCD_c('a');
   771   000984  0E61               	movlw	97
   772   000986  EC38  F007         	call	_EscribeLCD_c
   773                           
   774                           ;Lab4C.c: 92: EscribeLCD_c('s');
   775   00098A  0E73               	movlw	115
   776   00098C  EC38  F007         	call	_EscribeLCD_c
   777                           
   778                           ;Lab4C.c: 93: EscribeLCD_c(' ');
   779   000990  0E20               	movlw	32
   780   000992  EC38  F007         	call	_EscribeLCD_c
   781                           
   782                           ;Lab4C.c: 94: EscribeLCD_c('a');
   783   000996  0E61               	movlw	97
   784   000998  EC38  F007         	call	_EscribeLCD_c
   785                           
   786                           ;Lab4C.c: 95: EscribeLCD_c(' ');
   787   00099C  0E20               	movlw	32
   788   00099E  EC38  F007         	call	_EscribeLCD_c
   789                           
   790                           ;Lab4C.c: 96: EscribeLCD_c('c');
   791   0009A2  0E63               	movlw	99
   792   0009A4  EC38  F007         	call	_EscribeLCD_c
   793                           
   794                           ;Lab4C.c: 97: EscribeLCD_c('o');
   795   0009A8  0E6F               	movlw	111
   796   0009AA  EC38  F007         	call	_EscribeLCD_c
   797                           
   798                           ;Lab4C.c: 98: EscribeLCD_c('n');
   799   0009AE  0E6E               	movlw	110
   800   0009B0  EC38  F007         	call	_EscribeLCD_c
   801                           
   802                           ;Lab4C.c: 99: EscribeLCD_c('t');
   803   0009B4  0E74               	movlw	116
   804   0009B6  EC38  F007         	call	_EscribeLCD_c
   805                           
   806                           ;Lab4C.c: 100: EscribeLCD_c('a');
   807   0009BA  0E61               	movlw	97
   808   0009BC  EC38  F007         	call	_EscribeLCD_c
   809                           
   810                           ;Lab4C.c: 101: EscribeLCD_c('r');
   811   0009C0  0E72               	movlw	114
   812   0009C2  EC38  F007         	call	_EscribeLCD_c
   813                           
   814                           ;Lab4C.c: 102: EscribeLCD_c(':');
   815   0009C6  0E3A               	movlw	58
   816   0009C8  EC38  F007         	call	_EscribeLCD_c
   817                           
   818                           ;Lab4C.c: 103: EscribeLCD_c(' ');
   819   0009CC  0E20               	movlw	32
   820   0009CE  EC38  F007         	call	_EscribeLCD_c
   821   0009D2  D7A8               	goto	l1640
   822   0009D4                     l1660:
   823                           
   824                           ;Lab4C.c: 106: else if(Tecla == 16) {
   825   0009D4  0E10               	movlw	16
   826   0009D6  1815               	xorwf	_Tecla^0,w,c
   827   0009D8  A4D8               	btfss	status,2,c
   828   0009DA  D7A4               	goto	l1640
   829                           
   830                           ;Lab4C.c: 107: BorraLCD();
   831   0009DC  EC4E  F007         	call	_BorraLCD	;wreg free
   832                           
   833                           ;Lab4C.c: 108: DireccionaLCD(0x80);
   834   0009E0  0E80               	movlw	128
   835   0009E2  EC43  F007         	call	_DireccionaLCD
   836                           
   837                           ;Lab4C.c: 109: EscribeLCD_c('P');
   838   0009E6  0E50               	movlw	80
   839   0009E8  EC38  F007         	call	_EscribeLCD_c
   840                           
   841                           ;Lab4C.c: 110: EscribeLCD_c('i');
   842   0009EC  0E69               	movlw	105
   843   0009EE  EC38  F007         	call	_EscribeLCD_c
   844                           
   845                           ;Lab4C.c: 111: EscribeLCD_c('e');
   846   0009F2  0E65               	movlw	101
   847   0009F4  EC38  F007         	call	_EscribeLCD_c
   848                           
   849                           ;Lab4C.c: 112: EscribeLCD_c('z');
   850   0009F8  0E7A               	movlw	122
   851   0009FA  EC38  F007         	call	_EscribeLCD_c
   852                           
   853                           ;Lab4C.c: 113: EscribeLCD_c('a');
   854   0009FE  0E61               	movlw	97
   855   000A00  EC38  F007         	call	_EscribeLCD_c
   856                           
   857                           ;Lab4C.c: 114: EscribeLCD_c('s');
   858   000A04  0E73               	movlw	115
   859   000A06  EC38  F007         	call	_EscribeLCD_c
   860                           
   861                           ;Lab4C.c: 115: EscribeLCD_c(' ');
   862   000A0A  0E20               	movlw	32
   863   000A0C  EC38  F007         	call	_EscribeLCD_c
   864                           
   865                           ;Lab4C.c: 116: EscribeLCD_c('f');
   866   000A10  0E66               	movlw	102
   867   000A12  EC38  F007         	call	_EscribeLCD_c
   868                           
   869                           ;Lab4C.c: 117: EscribeLCD_c('a');
   870   000A16  0E61               	movlw	97
   871   000A18  EC38  F007         	call	_EscribeLCD_c
   872                           
   873                           ;Lab4C.c: 118: EscribeLCD_c('l');
   874   000A1C  0E6C               	movlw	108
   875   000A1E  EC38  F007         	call	_EscribeLCD_c
   876                           
   877                           ;Lab4C.c: 119: EscribeLCD_c('t');
   878   000A22  0E74               	movlw	116
   879   000A24  EC38  F007         	call	_EscribeLCD_c
   880                           
   881                           ;Lab4C.c: 120: EscribeLCD_c('a');
   882   000A28  0E61               	movlw	97
   883   000A2A  EC38  F007         	call	_EscribeLCD_c
   884                           
   885                           ;Lab4C.c: 121: EscribeLCD_c('n');
   886   000A2E  0E6E               	movlw	110
   887   000A30  EC38  F007         	call	_EscribeLCD_c
   888                           
   889                           ;Lab4C.c: 122: EscribeLCD_c('t');
   890   000A34  0E74               	movlw	116
   891   000A36  EC38  F007         	call	_EscribeLCD_c
   892                           
   893                           ;Lab4C.c: 123: EscribeLCD_c('e');
   894   000A3A  0E65               	movlw	101
   895   000A3C  EC38  F007         	call	_EscribeLCD_c
   896                           
   897                           ;Lab4C.c: 124: EscribeLCD_c('s');
   898   000A40  0E73               	movlw	115
   899   000A42  EC38  F007         	call	_EscribeLCD_c
   900                           
   901                           ;Lab4C.c: 125: EscribeLCD_c(':');
   902   000A46  0E3A               	movlw	58
   903   000A48  EC38  F007         	call	_EscribeLCD_c
   904                           
   905                           ;Lab4C.c: 126: EscribeLCD_c(' ');
   906   000A4C  0E20               	movlw	32
   907   000A4E  EC38  F007         	call	_EscribeLCD_c
   908                           
   909                           ;Lab4C.c: 127: EscribeLCD_n8(piezasAContar, 2);
   910   000A52  0E02               	movlw	2
   911   000A54  6E0A               	movwf	EscribeLCD_n8@b^0,c
   912   000A56  5014               	movf	_piezasAContar^0,w,c
   913   000A58  EC6A  F005         	call	_EscribeLCD_n8
   914                           
   915                           ;Lab4C.c: 129: DireccionaLCD(0x94);
   916   000A5C  0E94               	movlw	148
   917   000A5E  EC43  F007         	call	_DireccionaLCD
   918                           
   919                           ;Lab4C.c: 130: EscribeLCD_c('C');
   920   000A62  0E43               	movlw	67
   921   000A64  EC38  F007         	call	_EscribeLCD_c
   922                           
   923                           ;Lab4C.c: 131: EscribeLCD_c('u');
   924   000A68  0E75               	movlw	117
   925   000A6A  EC38  F007         	call	_EscribeLCD_c
   926                           
   927                           ;Lab4C.c: 132: EscribeLCD_c('e');
   928   000A6E  0E65               	movlw	101
   929   000A70  EC38  F007         	call	_EscribeLCD_c
   930                           
   931                           ;Lab4C.c: 133: EscribeLCD_c('n');
   932   000A74  0E6E               	movlw	110
   933   000A76  EC38  F007         	call	_EscribeLCD_c
   934                           
   935                           ;Lab4C.c: 134: EscribeLCD_c('t');
   936   000A7A  0E74               	movlw	116
   937   000A7C  EC38  F007         	call	_EscribeLCD_c
   938                           
   939                           ;Lab4C.c: 135: EscribeLCD_c('a');
   940   000A80  0E61               	movlw	97
   941   000A82  EC38  F007         	call	_EscribeLCD_c
   942                           
   943                           ;Lab4C.c: 136: EscribeLCD_c(' ');
   944   000A86  0E20               	movlw	32
   945   000A88  EC38  F007         	call	_EscribeLCD_c
   946                           
   947                           ;Lab4C.c: 137: EscribeLCD_c('o');
   948   000A8C  0E6F               	movlw	111
   949   000A8E  EC38  F007         	call	_EscribeLCD_c
   950                           
   951                           ;Lab4C.c: 138: EscribeLCD_c('b');
   952   000A92  0E62               	movlw	98
   953   000A94  EC38  F007         	call	_EscribeLCD_c
   954                           
   955                           ;Lab4C.c: 139: EscribeLCD_c('j');
   956   000A98  0E6A               	movlw	106
   957   000A9A  EC38  F007         	call	_EscribeLCD_c
   958                           
   959                           ;Lab4C.c: 140: EscribeLCD_c('e');
   960   000A9E  0E65               	movlw	101
   961   000AA0  EC38  F007         	call	_EscribeLCD_c
   962                           
   963                           ;Lab4C.c: 141: EscribeLCD_c('t');
   964   000AA4  0E74               	movlw	116
   965   000AA6  EC38  F007         	call	_EscribeLCD_c
   966                           
   967                           ;Lab4C.c: 142: EscribeLCD_c('i');
   968   000AAA  0E69               	movlw	105
   969   000AAC  EC38  F007         	call	_EscribeLCD_c
   970                           
   971                           ;Lab4C.c: 143: EscribeLCD_c('v');
   972   000AB0  0E76               	movlw	118
   973   000AB2  EC38  F007         	call	_EscribeLCD_c
   974                           
   975                           ;Lab4C.c: 144: EscribeLCD_c('o');
   976   000AB6  0E6F               	movlw	111
   977   000AB8  EC38  F007         	call	_EscribeLCD_c
   978                           
   979                           ;Lab4C.c: 145: EscribeLCD_c(':');
   980   000ABC  0E3A               	movlw	58
   981   000ABE  EC38  F007         	call	_EscribeLCD_c
   982                           
   983                           ;Lab4C.c: 146: EscribeLCD_c(' ');
   984   000AC2  0E20               	movlw	32
   985   000AC4  EC38  F007         	call	_EscribeLCD_c
   986                           
   987                           ;Lab4C.c: 147: EscribeLCD_n8(piezasAContar, 2);
   988   000AC8  0E02               	movlw	2
   989   000ACA  6E0A               	movwf	EscribeLCD_n8@b^0,c
   990   000ACC  5014               	movf	_piezasAContar^0,w,c
   991   000ACE  EC6A  F005         	call	_EscribeLCD_n8
   992   000AD2  D728               	goto	l1640
   993   000AD4                     __end_of_main:
   994                           	callstack 0
   995                           
   996 ;; *************** function _InicializaLCD *****************
   997 ;; Defined at:
   998 ;;		line 71 in file "LibLCDXC8.h"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1012 ;;      Params:         0       0       0       0       0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1015 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; Hardware stack levels required when called: 4
  1019 ;; This function calls:
  1020 ;;		_BorraLCD
  1021 ;;		_EnviaDato
  1022 ;;		_HabilitaLCD
  1023 ;;		_RetardoLCD
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text1
  1030   000C8C                     __ptext1:
  1031                           	callstack 0
  1032   000C8C                     _InicializaLCD:
  1033                           	callstack 26
  1034                           
  1035                           ;LibLCDXC8.h: 73: LATD0=0;
  1036                           
  1037                           ;incstack = 0
  1038   000C8C  908C               	bcf	3980,0,c	;volatile
  1039                           
  1040                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1041   000C8E  0E04               	movlw	4
  1042   000C90  1816               	xorwf	_interfaz^0,w,c
  1043   000C92  A4D8               	btfss	status,2,c
  1044   000C94  D004               	goto	l1446
  1045                           
  1046                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  1047   000C96  508C               	movf	140,w,c	;volatile
  1048   000C98  0B0F               	andlw	15
  1049   000C9A  0930               	iorlw	48
  1050   000C9C  D001               	goto	L1
  1051   000C9E                     l1446:
  1052                           
  1053                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1054   000C9E  0E3F               	movlw	63
  1055   000CA0                     L1:
  1056   000CA0  6E8C               	movwf	140,c	;volatile
  1057                           
  1058                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1059   000CA2  EC58  F007         	call	_HabilitaLCD	;wreg free
  1060                           
  1061                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1062   000CA6  0E01               	movlw	1
  1063   000CA8  EC94  F006         	call	_RetardoLCD
  1064                           
  1065                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1066   000CAC  0E04               	movlw	4
  1067   000CAE  1816               	xorwf	_interfaz^0,w,c
  1068   000CB0  A4D8               	btfss	status,2,c
  1069   000CB2  D004               	goto	l1456
  1070                           
  1071                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  1072   000CB4  508C               	movf	140,w,c	;volatile
  1073   000CB6  0B0F               	andlw	15
  1074   000CB8  0930               	iorlw	48
  1075   000CBA  D001               	goto	L2
  1076   000CBC                     l1456:
  1077                           
  1078                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1079   000CBC  0E3F               	movlw	63
  1080   000CBE                     L2:
  1081   000CBE  6E8C               	movwf	140,c	;volatile
  1082                           
  1083                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1084   000CC0  EC58  F007         	call	_HabilitaLCD	;wreg free
  1085                           
  1086                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1087   000CC4  0E03               	movlw	3
  1088   000CC6  EC94  F006         	call	_RetardoLCD
  1089                           
  1090                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1091   000CCA  0E04               	movlw	4
  1092   000CCC  1816               	xorwf	_interfaz^0,w,c
  1093   000CCE  A4D8               	btfss	status,2,c
  1094   000CD0  D004               	goto	l1466
  1095                           
  1096                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  1097   000CD2  508C               	movf	140,w,c	;volatile
  1098   000CD4  0B0F               	andlw	15
  1099   000CD6  0930               	iorlw	48
  1100   000CD8  D001               	goto	L3
  1101   000CDA                     l1466:
  1102                           
  1103                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1104   000CDA  0E3F               	movlw	63
  1105   000CDC                     L3:
  1106   000CDC  6E8C               	movwf	140,c	;volatile
  1107                           
  1108                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1109   000CDE  EC58  F007         	call	_HabilitaLCD	;wreg free
  1110                           
  1111                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1112   000CE2  0E04               	movlw	4
  1113   000CE4  EC94  F006         	call	_RetardoLCD
  1114                           
  1115                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1116   000CE8  0E04               	movlw	4
  1117   000CEA  1816               	xorwf	_interfaz^0,w,c
  1118   000CEC  A4D8               	btfss	status,2,c
  1119   000CEE  D011               	goto	l1486
  1120                           
  1121                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  1122   000CF0  508C               	movf	140,w,c	;volatile
  1123   000CF2  0B0F               	andlw	15
  1124   000CF4  0920               	iorlw	32
  1125   000CF6  6E8C               	movwf	140,c	;volatile
  1126                           
  1127                           ;LibLCDXC8.h: 94: HabilitaLCD();
  1128   000CF8  EC58  F007         	call	_HabilitaLCD	;wreg free
  1129                           
  1130                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  1131   000CFC  0E04               	movlw	4
  1132   000CFE  EC94  F006         	call	_RetardoLCD
  1133                           
  1134                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  1135   000D02  0E2F               	movlw	47
  1136   000D04  ECC7  F006         	call	_EnviaDato
  1137                           
  1138                           ;LibLCDXC8.h: 97: HabilitaLCD();
  1139   000D08  EC58  F007         	call	_HabilitaLCD	;wreg free
  1140                           
  1141                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  1142   000D0C  0E04               	movlw	4
  1143   000D0E  EC94  F006         	call	_RetardoLCD
  1144   000D12                     l1486:
  1145                           
  1146                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1147   000D12  EC4E  F007         	call	_BorraLCD	;wreg free
  1148                           
  1149                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1150   000D16  0E0F               	movlw	15
  1151   000D18  ECC7  F006         	call	_EnviaDato
  1152                           
  1153                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1154   000D1C  EC58  F007         	call	_HabilitaLCD	;wreg free
  1155                           
  1156                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1157   000D20  0E04               	movlw	4
  1158   000D22  EC94  F006         	call	_RetardoLCD
  1159   000D26  0012               	return		;funcret
  1160   000D28                     __end_of_InicializaLCD:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _BorraLCD *****************
  1164 ;; Defined at:
  1165 ;;		line 112 in file "LibLCDXC8.h"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 3
  1186 ;; This function calls:
  1187 ;;		_EnviaDato
  1188 ;;		_HabilitaLCD
  1189 ;;		_RetardoLCD
  1190 ;; This function is called by:
  1191 ;;		_InicializaLCD
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text2
  1197   000E9C                     __ptext2:
  1198                           	callstack 0
  1199   000E9C                     _BorraLCD:
  1200                           	callstack 26
  1201                           
  1202                           ;LibLCDXC8.h: 114: LATD0=0;
  1203                           
  1204                           ;incstack = 0
  1205   000E9C  908C               	bcf	3980,0,c	;volatile
  1206                           
  1207                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  1208   000E9E  0E01               	movlw	1
  1209   000EA0  ECC7  F006         	call	_EnviaDato
  1210                           
  1211                           ;LibLCDXC8.h: 116: HabilitaLCD();
  1212   000EA4  EC58  F007         	call	_HabilitaLCD	;wreg free
  1213                           
  1214                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  1215   000EA8  0E02               	movlw	2
  1216   000EAA  EC94  F006         	call	_RetardoLCD
  1217   000EAE  0012               	return		;funcret
  1218   000EB0                     __end_of_BorraLCD:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _EscribeLCD_n8 *****************
  1222 ;; Defined at:
  1223 ;;		line 145 in file "LibLCDXC8.h"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  a               1    wreg     unsigned char 
  1226 ;;  b               1    9[COMRAM] unsigned char 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  a               1   13[COMRAM] unsigned char 
  1229 ;;  unidad          1   12[COMRAM] unsigned char 
  1230 ;;  decena          1   11[COMRAM] unsigned char 
  1231 ;;  centena         1   10[COMRAM] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1241 ;;      Params:         1       0       0       0       0       0       0       0       0
  1242 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1244 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1245 ;;Total ram usage:        5 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 3
  1248 ;; This function calls:
  1249 ;;		_EnviaDato
  1250 ;;		_HabilitaLCD
  1251 ;;		_RetardoLCD
  1252 ;;		___lbdiv
  1253 ;;		___lbmod
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text3
  1260   000AD4                     __ptext3:
  1261                           	callstack 0
  1262   000AD4                     _EscribeLCD_n8:
  1263                           	callstack 27
  1264                           
  1265                           ;incstack = 0
  1266                           ;EscribeLCD_n8@a stored from wreg
  1267   000AD4  6E0E               	movwf	EscribeLCD_n8@a^0,c
  1268                           
  1269                           ;LibLCDXC8.h: 150: unsigned char centena,decena,unidad;;LibLCDXC8.h: 151: LATD0=1;
  1270   000AD6  808C               	bsf	3980,0,c	;volatile
  1271                           
  1272                           ;LibLCDXC8.h: 152: switch(b){
  1273   000AD8  D065               	goto	l1536
  1274   000ADA                     l1504:
  1275   000ADA  0E0A               	movlw	10
  1276   000ADC  6E02               	movwf	___lbmod@divisor^0,c
  1277   000ADE  500E               	movf	EscribeLCD_n8@a^0,w,c
  1278   000AE0  EC06  F007         	call	___lbmod
  1279   000AE4  6E0D               	movwf	EscribeLCD_n8@unidad^0,c
  1280                           
  1281                           ;LibLCDXC8.h: 154: EnviaDato(unidad+48);
  1282   000AE6  500D               	movf	EscribeLCD_n8@unidad^0,w,c
  1283   000AE8  0F30               	addlw	48
  1284   000AEA  ECC7  F006         	call	_EnviaDato
  1285                           
  1286                           ;LibLCDXC8.h: 155: HabilitaLCD();
  1287   000AEE  EC58  F007         	call	_HabilitaLCD	;wreg free
  1288                           
  1289                           ;LibLCDXC8.h: 156: RetardoLCD(4);
  1290   000AF2  0E04               	movlw	4
  1291   000AF4  EC94  F006         	call	_RetardoLCD
  1292                           
  1293                           ;LibLCDXC8.h: 157: break;
  1294   000AF8  0012               	return	
  1295   000AFA                     l1510:
  1296   000AFA  0E0A               	movlw	10
  1297   000AFC  6E06               	movwf	___lbdiv@divisor^0,c
  1298   000AFE  0E64               	movlw	100
  1299   000B00  6E02               	movwf	___lbmod@divisor^0,c
  1300   000B02  500E               	movf	EscribeLCD_n8@a^0,w,c
  1301   000B04  EC06  F007         	call	___lbmod
  1302   000B08  ECEA  F006         	call	___lbdiv
  1303   000B0C  6E0C               	movwf	EscribeLCD_n8@decena^0,c
  1304                           
  1305                           ;LibLCDXC8.h: 159: unidad=a%10;
  1306   000B0E  0E0A               	movlw	10
  1307   000B10  6E02               	movwf	___lbmod@divisor^0,c
  1308   000B12  500E               	movf	EscribeLCD_n8@a^0,w,c
  1309   000B14  EC06  F007         	call	___lbmod
  1310   000B18  6E0D               	movwf	EscribeLCD_n8@unidad^0,c
  1311                           
  1312                           ;LibLCDXC8.h: 160: EnviaDato(decena+48);
  1313   000B1A  500C               	movf	EscribeLCD_n8@decena^0,w,c
  1314   000B1C  0F30               	addlw	48
  1315   000B1E  ECC7  F006         	call	_EnviaDato
  1316                           
  1317                           ;LibLCDXC8.h: 161: HabilitaLCD();
  1318   000B22  EC58  F007         	call	_HabilitaLCD	;wreg free
  1319                           
  1320                           ;LibLCDXC8.h: 162: RetardoLCD(4);
  1321   000B26  0E04               	movlw	4
  1322   000B28  EC94  F006         	call	_RetardoLCD
  1323                           
  1324                           ;LibLCDXC8.h: 163: EnviaDato(unidad+48);
  1325   000B2C  500D               	movf	EscribeLCD_n8@unidad^0,w,c
  1326   000B2E  0F30               	addlw	48
  1327   000B30  ECC7  F006         	call	_EnviaDato
  1328                           
  1329                           ;LibLCDXC8.h: 164: HabilitaLCD();
  1330   000B34  EC58  F007         	call	_HabilitaLCD	;wreg free
  1331                           
  1332                           ;LibLCDXC8.h: 165: RetardoLCD(4);
  1333   000B38  0E04               	movlw	4
  1334   000B3A  EC94  F006         	call	_RetardoLCD
  1335                           
  1336                           ;LibLCDXC8.h: 166: break;
  1337   000B3E  0012               	return	
  1338   000B40                     l1520:
  1339   000B40  0E64               	movlw	100
  1340   000B42  6E06               	movwf	___lbdiv@divisor^0,c
  1341   000B44  500E               	movf	EscribeLCD_n8@a^0,w,c
  1342   000B46  ECEA  F006         	call	___lbdiv
  1343   000B4A  6E0B               	movwf	EscribeLCD_n8@centena^0,c
  1344                           
  1345                           ;LibLCDXC8.h: 168: decena=(a%100)/10;
  1346   000B4C  0E0A               	movlw	10
  1347   000B4E  6E06               	movwf	___lbdiv@divisor^0,c
  1348   000B50  0E64               	movlw	100
  1349   000B52  6E02               	movwf	___lbmod@divisor^0,c
  1350   000B54  500E               	movf	EscribeLCD_n8@a^0,w,c
  1351   000B56  EC06  F007         	call	___lbmod
  1352   000B5A  ECEA  F006         	call	___lbdiv
  1353   000B5E  6E0C               	movwf	EscribeLCD_n8@decena^0,c
  1354                           
  1355                           ;LibLCDXC8.h: 169: unidad=a%10;
  1356   000B60  0E0A               	movlw	10
  1357   000B62  6E02               	movwf	___lbmod@divisor^0,c
  1358   000B64  500E               	movf	EscribeLCD_n8@a^0,w,c
  1359   000B66  EC06  F007         	call	___lbmod
  1360   000B6A  6E0D               	movwf	EscribeLCD_n8@unidad^0,c
  1361                           
  1362                           ;LibLCDXC8.h: 170: EnviaDato(centena+48);
  1363   000B6C  500B               	movf	EscribeLCD_n8@centena^0,w,c
  1364   000B6E  0F30               	addlw	48
  1365   000B70  ECC7  F006         	call	_EnviaDato
  1366                           
  1367                           ;LibLCDXC8.h: 171: HabilitaLCD();
  1368   000B74  EC58  F007         	call	_HabilitaLCD	;wreg free
  1369                           
  1370                           ;LibLCDXC8.h: 172: RetardoLCD(4);
  1371   000B78  0E04               	movlw	4
  1372   000B7A  EC94  F006         	call	_RetardoLCD
  1373                           
  1374                           ;LibLCDXC8.h: 173: EnviaDato(decena+48);
  1375   000B7E  500C               	movf	EscribeLCD_n8@decena^0,w,c
  1376   000B80  0F30               	addlw	48
  1377   000B82  ECC7  F006         	call	_EnviaDato
  1378                           
  1379                           ;LibLCDXC8.h: 174: HabilitaLCD();
  1380   000B86  EC58  F007         	call	_HabilitaLCD	;wreg free
  1381                           
  1382                           ;LibLCDXC8.h: 175: RetardoLCD(4);
  1383   000B8A  0E04               	movlw	4
  1384   000B8C  EC94  F006         	call	_RetardoLCD
  1385                           
  1386                           ;LibLCDXC8.h: 176: EnviaDato(unidad+48);
  1387   000B90  500D               	movf	EscribeLCD_n8@unidad^0,w,c
  1388   000B92  0F30               	addlw	48
  1389   000B94  ECC7  F006         	call	_EnviaDato
  1390                           
  1391                           ;LibLCDXC8.h: 177: HabilitaLCD();
  1392   000B98  EC58  F007         	call	_HabilitaLCD	;wreg free
  1393                           
  1394                           ;LibLCDXC8.h: 178: RetardoLCD(4);
  1395   000B9C  0E04               	movlw	4
  1396   000B9E  EC94  F006         	call	_RetardoLCD
  1397                           
  1398                           ;LibLCDXC8.h: 179: break;
  1399   000BA2  0012               	return	
  1400   000BA4                     l1536:
  1401   000BA4  500A               	movf	EscribeLCD_n8@b^0,w,c
  1402                           
  1403                           ; Switch size 1, requested type "simple"
  1404                           ; Number of cases is 3, Range of values is 1 to 3
  1405                           ; switch strategies available:
  1406                           ; Name         Instructions Cycles
  1407                           ; simple_byte           10     6 (average)
  1408                           ;	Chosen strategy is simple_byte
  1409   000BA6  0A01               	xorlw	1	; case 1
  1410   000BA8  B4D8               	btfsc	status,2,c
  1411   000BAA  D797               	goto	l1504
  1412   000BAC  0A03               	xorlw	3	; case 2
  1413   000BAE  B4D8               	btfsc	status,2,c
  1414   000BB0  D7A4               	goto	l1510
  1415   000BB2  0A01               	xorlw	1	; case 3
  1416   000BB4  A4D8               	btfss	status,2,c
  1417   000BB6  0012               	return	
  1418   000BB8  D7C3               	goto	l1520
  1419   000BBA                     __end_of_EscribeLCD_n8:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function ___lbmod *****************
  1423 ;; Defined at:
  1424 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  dividend        1    wreg     unsigned char 
  1427 ;;  divisor         1    1[COMRAM] unsigned char 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  dividend        1    2[COMRAM] unsigned char 
  1430 ;;  rem             1    4[COMRAM] unsigned char 
  1431 ;;  counter         1    3[COMRAM] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      unsigned char 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1441 ;;      Params:         1       0       0       0       0       0       0       0       0
  1442 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1444 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1445 ;;Total ram usage:        4 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 1
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_EscribeLCD_n8
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text4
  1456   000E0C                     __ptext4:
  1457                           	callstack 0
  1458   000E0C                     ___lbmod:
  1459                           	callstack 28
  1460                           
  1461                           ;incstack = 0
  1462                           ;___lbmod@dividend stored from wreg
  1463   000E0C  6E03               	movwf	___lbmod@dividend^0,c
  1464   000E0E  0E08               	movlw	8
  1465   000E10  6E04               	movwf	___lbmod@counter^0,c
  1466   000E12  6A05               	clrf	___lbmod@rem^0,c
  1467   000E14                     l1422:
  1468   000E14  90D8               	bcf	status,0,c
  1469   000E16  3403               	rlcf	___lbmod@dividend^0,w,c
  1470   000E18  3405               	rlcf	___lbmod@rem^0,w,c
  1471   000E1A  6E05               	movwf	___lbmod@rem^0,c
  1472   000E1C  90D8               	bcf	status,0,c
  1473   000E1E  3603               	rlcf	___lbmod@dividend^0,f,c
  1474   000E20  5002               	movf	___lbmod@divisor^0,w,c
  1475   000E22  5C05               	subwf	___lbmod@rem^0,w,c
  1476   000E24  A0D8               	btfss	status,0,c
  1477   000E26  D002               	goto	l1430
  1478   000E28  5002               	movf	___lbmod@divisor^0,w,c
  1479   000E2A  5E05               	subwf	___lbmod@rem^0,f,c
  1480   000E2C                     l1430:
  1481   000E2C  2E04               	decfsz	___lbmod@counter^0,f,c
  1482   000E2E  D7F2               	goto	l1422
  1483   000E30  5005               	movf	___lbmod@rem^0,w,c
  1484   000E32  0012               	return		;funcret
  1485   000E34                     __end_of___lbmod:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function ___lbdiv *****************
  1489 ;; Defined at:
  1490 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  dividend        1    wreg     unsigned char 
  1493 ;;  divisor         1    5[COMRAM] unsigned char 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  dividend        1    6[COMRAM] unsigned char 
  1496 ;;  quotient        1    8[COMRAM] unsigned char 
  1497 ;;  counter         1    7[COMRAM] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      unsigned char 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1507 ;;      Params:         1       0       0       0       0       0       0       0       0
  1508 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1510 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1511 ;;Total ram usage:        4 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; Hardware stack levels required when called: 1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_EscribeLCD_n8
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text5
  1522   000DD4                     __ptext5:
  1523                           	callstack 0
  1524   000DD4                     ___lbdiv:
  1525                           	callstack 28
  1526                           
  1527                           ;incstack = 0
  1528                           ;___lbdiv@dividend stored from wreg
  1529   000DD4  6E07               	movwf	___lbdiv@dividend^0,c
  1530   000DD6  6A09               	clrf	___lbdiv@quotient^0,c
  1531   000DD8  5006               	movf	___lbdiv@divisor^0,w,c
  1532   000DDA  B4D8               	btfsc	status,2,c
  1533   000DDC  D015               	goto	l1414
  1534   000DDE  0E01               	movlw	1
  1535   000DE0  6E08               	movwf	___lbdiv@counter^0,c
  1536   000DE2  D003               	goto	l1402
  1537   000DE4                     l1398:
  1538   000DE4  90D8               	bcf	status,0,c
  1539   000DE6  3606               	rlcf	___lbdiv@divisor^0,f,c
  1540   000DE8  2A08               	incf	___lbdiv@counter^0,f,c
  1541   000DEA                     l1402:
  1542   000DEA  AE06               	btfss	___lbdiv@divisor^0,7,c
  1543   000DEC  D7FB               	goto	l1398
  1544   000DEE                     u410:
  1545   000DEE  90D8               	bcf	status,0,c
  1546   000DF0  3609               	rlcf	___lbdiv@quotient^0,f,c
  1547   000DF2  5006               	movf	___lbdiv@divisor^0,w,c
  1548   000DF4  5C07               	subwf	___lbdiv@dividend^0,w,c
  1549   000DF6  A0D8               	btfss	status,0,c
  1550   000DF8  D003               	goto	l1410
  1551   000DFA  5006               	movf	___lbdiv@divisor^0,w,c
  1552   000DFC  5E07               	subwf	___lbdiv@dividend^0,f,c
  1553   000DFE  8009               	bsf	___lbdiv@quotient^0,0,c
  1554   000E00                     l1410:
  1555   000E00  90D8               	bcf	status,0,c
  1556   000E02  3206               	rrcf	___lbdiv@divisor^0,f,c
  1557   000E04  2E08               	decfsz	___lbdiv@counter^0,f,c
  1558   000E06  D7F3               	goto	u410
  1559   000E08                     l1414:
  1560   000E08  5009               	movf	___lbdiv@quotient^0,w,c
  1561   000E0A  0012               	return		;funcret
  1562   000E0C                     __end_of___lbdiv:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _EscribeLCD_c *****************
  1566 ;; Defined at:
  1567 ;;		line 136 in file "LibLCDXC8.h"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  a               1    wreg     unsigned char 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  a               1    5[COMRAM] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        1 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 3
  1588 ;; This function calls:
  1589 ;;		_EnviaDato
  1590 ;;		_HabilitaLCD
  1591 ;;		_RetardoLCD
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text6
  1598   000E70                     __ptext6:
  1599                           	callstack 0
  1600   000E70                     _EscribeLCD_c:
  1601                           	callstack 27
  1602                           
  1603                           ;incstack = 0
  1604                           ;EscribeLCD_c@a stored from wreg
  1605   000E70  6E06               	movwf	EscribeLCD_c@a^0,c
  1606                           
  1607                           ;LibLCDXC8.h: 140: LATD0=1;
  1608   000E72  808C               	bsf	3980,0,c	;volatile
  1609                           
  1610                           ;LibLCDXC8.h: 141: EnviaDato(a);
  1611   000E74  5006               	movf	EscribeLCD_c@a^0,w,c
  1612   000E76  ECC7  F006         	call	_EnviaDato
  1613                           
  1614                           ;LibLCDXC8.h: 142: HabilitaLCD();
  1615   000E7A  EC58  F007         	call	_HabilitaLCD	;wreg free
  1616                           
  1617                           ;LibLCDXC8.h: 143: RetardoLCD(4);
  1618   000E7E  0E04               	movlw	4
  1619   000E80  EC94  F006         	call	_RetardoLCD
  1620   000E84  0012               	return		;funcret
  1621   000E86                     __end_of_EscribeLCD_c:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _DireccionaLCD *****************
  1625 ;; Defined at:
  1626 ;;		line 238 in file "LibLCDXC8.h"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  a               1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  a               1    5[COMRAM] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0
  1641 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1643 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1644 ;;Total ram usage:        1 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 3
  1647 ;; This function calls:
  1648 ;;		_EnviaDato
  1649 ;;		_HabilitaLCD
  1650 ;;		_RetardoLCD
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text7
  1657   000E86                     __ptext7:
  1658                           	callstack 0
  1659   000E86                     _DireccionaLCD:
  1660                           	callstack 27
  1661                           
  1662                           ;incstack = 0
  1663                           ;DireccionaLCD@a stored from wreg
  1664   000E86  6E06               	movwf	DireccionaLCD@a^0,c
  1665                           
  1666                           ;LibLCDXC8.h: 241: LATD0=0;
  1667   000E88  908C               	bcf	3980,0,c	;volatile
  1668                           
  1669                           ;LibLCDXC8.h: 242: EnviaDato(a);
  1670   000E8A  5006               	movf	DireccionaLCD@a^0,w,c
  1671   000E8C  ECC7  F006         	call	_EnviaDato
  1672                           
  1673                           ;LibLCDXC8.h: 243: HabilitaLCD();
  1674   000E90  EC58  F007         	call	_HabilitaLCD	;wreg free
  1675                           
  1676                           ;LibLCDXC8.h: 244: RetardoLCD(4);
  1677   000E94  0E04               	movlw	4
  1678   000E96  EC94  F006         	call	_RetardoLCD
  1679   000E9A  0012               	return		;funcret
  1680   000E9C                     __end_of_DireccionaLCD:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _EnviaDato *****************
  1684 ;; Defined at:
  1685 ;;		line 59 in file "LibLCDXC8.h"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  a               1    wreg     unsigned char 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  a               1    4[COMRAM] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0
  1700 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1701 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1702 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1703 ;;Total ram usage:        2 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 2
  1706 ;; This function calls:
  1707 ;;		_HabilitaLCD
  1708 ;;		_RetardoLCD
  1709 ;; This function is called by:
  1710 ;;		_InicializaLCD
  1711 ;;		_BorraLCD
  1712 ;;		_EscribeLCD_c
  1713 ;;		_EscribeLCD_n8
  1714 ;;		_DireccionaLCD
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text8
  1719   000D8E                     __ptext8:
  1720                           	callstack 0
  1721   000D8E                     _EnviaDato:
  1722                           	callstack 27
  1723                           
  1724                           ;incstack = 0
  1725                           ;EnviaDato@a stored from wreg
  1726   000D8E  6E05               	movwf	EnviaDato@a^0,c
  1727                           
  1728                           ;LibLCDXC8.h: 60: if(interfaz==4){
  1729   000D90  0E04               	movlw	4
  1730   000D92  1816               	xorwf	_interfaz^0,w,c
  1731   000D94  A4D8               	btfss	status,2,c
  1732   000D96  D017               	goto	l1380
  1733                           
  1734                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  1735   000D98  C005  F004         	movff	EnviaDato@a,??_EnviaDato
  1736   000D9C  0EF0               	movlw	240
  1737   000D9E  1604               	andwf	??_EnviaDato^0,f,c
  1738   000DA0  508C               	movf	140,w,c	;volatile
  1739   000DA2  0B0F               	andlw	15
  1740   000DA4  1004               	iorwf	??_EnviaDato^0,w,c
  1741   000DA6  6E8C               	movwf	140,c	;volatile
  1742                           
  1743                           ;LibLCDXC8.h: 62: HabilitaLCD();
  1744   000DA8  EC58  F007         	call	_HabilitaLCD	;wreg free
  1745                           
  1746                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  1747   000DAC  0E01               	movlw	1
  1748   000DAE  EC94  F006         	call	_RetardoLCD
  1749                           
  1750                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  1751   000DB2  C005  F004         	movff	EnviaDato@a,??_EnviaDato
  1752   000DB6  3A04               	swapf	??_EnviaDato^0,f,c
  1753   000DB8  0EF0               	movlw	240
  1754   000DBA  1604               	andwf	??_EnviaDato^0,f,c
  1755   000DBC  508C               	movf	140,w,c	;volatile
  1756   000DBE  0B0F               	andlw	15
  1757   000DC0  1004               	iorwf	??_EnviaDato^0,w,c
  1758   000DC2  6E8C               	movwf	140,c	;volatile
  1759                           
  1760                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  1761   000DC4  0012               	return	
  1762   000DC6                     l1380:
  1763   000DC6  0E08               	movlw	8
  1764   000DC8  1816               	xorwf	_interfaz^0,w,c
  1765   000DCA  A4D8               	btfss	status,2,c
  1766   000DCC  0012               	return	
  1767                           
  1768                           ;LibLCDXC8.h: 68: LATD=a;
  1769   000DCE  C005  FF8C         	movff	EnviaDato@a,3980	;volatile
  1770   000DD2  0012               	return		;funcret
  1771   000DD4                     __end_of_EnviaDato:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _RetardoLCD *****************
  1775 ;; Defined at:
  1776 ;;		line 274 in file "LibLCDXC8.h"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  a               1    wreg     unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  a               1    2[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0
  1791 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1792 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1793 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_EnviaDato
  1801 ;;		_InicializaLCD
  1802 ;;		_BorraLCD
  1803 ;;		_EscribeLCD_c
  1804 ;;		_EscribeLCD_n8
  1805 ;;		_DireccionaLCD
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text9
  1810   000D28                     __ptext9:
  1811                           	callstack 0
  1812   000D28                     _RetardoLCD:
  1813                           	callstack 28
  1814                           
  1815                           ;incstack = 0
  1816                           ;RetardoLCD@a stored from wreg
  1817   000D28  6E03               	movwf	RetardoLCD@a^0,c
  1818                           
  1819                           ;LibLCDXC8.h: 275: switch(a){
  1820   000D2A  D023               	goto	l1368
  1821   000D2C                     l1358:
  1822   000D2C  0E62               	movlw	98
  1823   000D2E  6E02               	movwf	??_RetardoLCD^0,c
  1824   000D30  0E66               	movlw	102
  1825   000D32                     u577:
  1826   000D32  2EE8               	decfsz	wreg,f,c
  1827   000D34  D7FE               	bra	u577
  1828   000D36  2E02               	decfsz	??_RetardoLCD^0,f,c
  1829   000D38  D7FC               	bra	u577
  1830                           
  1831                           ;LibLCDXC8.h: 278: break;
  1832   000D3A  0012               	return	
  1833   000D3C                     l1360:
  1834   000D3C  0E07               	movlw	7
  1835   000D3E  6E02               	movwf	??_RetardoLCD^0,c
  1836   000D40  0E7D               	movlw	125
  1837   000D42                     u587:
  1838   000D42  2EE8               	decfsz	wreg,f,c
  1839   000D44  D7FE               	bra	u587
  1840   000D46  2E02               	decfsz	??_RetardoLCD^0,f,c
  1841   000D48  D7FC               	bra	u587
  1842   000D4A  0000               	nop	
  1843                           
  1844                           ;LibLCDXC8.h: 280: _delay((unsigned long)((640)*(20000000/4000000.0)));
  1845   000D4C  0E05               	movlw	5
  1846   000D4E  6E02               	movwf	??_RetardoLCD^0,c
  1847   000D50  0E26               	movlw	38
  1848   000D52                     u597:
  1849   000D52  2EE8               	decfsz	wreg,f,c
  1850   000D54  D7FE               	bra	u597
  1851   000D56  2E02               	decfsz	??_RetardoLCD^0,f,c
  1852   000D58  D7FC               	bra	u597
  1853   000D5A  D000               	nop2	
  1854                           
  1855                           ;LibLCDXC8.h: 282: break;
  1856   000D5C  0012               	return	
  1857   000D5E                     l1362:
  1858   000D5E  0EA6               	movlw	166
  1859   000D60                     u607:
  1860   000D60  2EE8               	decfsz	wreg,f,c
  1861   000D62  D7FE               	bra	u607
  1862   000D64  D000               	nop2	
  1863                           
  1864                           ;LibLCDXC8.h: 285: break;
  1865   000D66  0012               	return	
  1866   000D68                     l1364:
  1867   000D68  0E42               	movlw	66
  1868   000D6A                     u617:
  1869   000D6A  2EE8               	decfsz	wreg,f,c
  1870   000D6C  D7FE               	bra	u617
  1871   000D6E  D000               	nop2	
  1872                           
  1873                           ;LibLCDXC8.h: 288: break;
  1874   000D70  0012               	return	
  1875   000D72                     l1368:
  1876   000D72  5003               	movf	RetardoLCD@a^0,w,c
  1877                           
  1878                           ; Switch size 1, requested type "simple"
  1879                           ; Number of cases is 4, Range of values is 1 to 4
  1880                           ; switch strategies available:
  1881                           ; Name         Instructions Cycles
  1882                           ; simple_byte           13     7 (average)
  1883                           ;	Chosen strategy is simple_byte
  1884   000D74  0A01               	xorlw	1	; case 1
  1885   000D76  B4D8               	btfsc	status,2,c
  1886   000D78  D7D9               	goto	l1358
  1887   000D7A  0A03               	xorlw	3	; case 2
  1888   000D7C  B4D8               	btfsc	status,2,c
  1889   000D7E  D7DE               	goto	l1360
  1890   000D80  0A01               	xorlw	1	; case 3
  1891   000D82  B4D8               	btfsc	status,2,c
  1892   000D84  D7EC               	goto	l1362
  1893   000D86  0A07               	xorlw	7	; case 4
  1894   000D88  A4D8               	btfss	status,2,c
  1895   000D8A  0012               	return	
  1896   000D8C  D7ED               	goto	l1364
  1897   000D8E                     __end_of_RetardoLCD:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _HabilitaLCD *****************
  1901 ;; Defined at:
  1902 ;;		line 105 in file "LibLCDXC8.h"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_EnviaDato
  1927 ;;		_InicializaLCD
  1928 ;;		_BorraLCD
  1929 ;;		_EscribeLCD_c
  1930 ;;		_EscribeLCD_n8
  1931 ;;		_DireccionaLCD
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text10
  1936   000EB0                     __ptext10:
  1937                           	callstack 0
  1938   000EB0                     _HabilitaLCD:
  1939                           	callstack 28
  1940                           
  1941                           ;LibLCDXC8.h: 107: LATD1=1;
  1942                           
  1943                           ;incstack = 0
  1944   000EB0  828C               	bsf	3980,1,c	;volatile
  1945                           
  1946                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(20000000/4000000.0)));
  1947   000EB2  0E42               	movlw	66
  1948   000EB4                     u627:
  1949   000EB4  2EE8               	decfsz	wreg,f,c
  1950   000EB6  D7FE               	bra	u627
  1951   000EB8  D000               	nop2	
  1952                           
  1953                           ;LibLCDXC8.h: 110: LATD1=0;
  1954   000EBA  928C               	bcf	3980,1,c	;volatile
  1955   000EBC  0012               	return		;funcret
  1956   000EBE                     __end_of_HabilitaLCD:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _ConfiguraLCD *****************
  1960 ;; Defined at:
  1961 ;;		line 55 in file "LibLCDXC8.h"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  a               1    wreg     unsigned char 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  a               1    1[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0
  1976 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1978 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1979 ;;Total ram usage:        1 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text11
  1990   000E58                     __ptext11:
  1991                           	callstack 0
  1992   000E58                     _ConfiguraLCD:
  1993                           	callstack 29
  1994                           
  1995                           ;incstack = 0
  1996                           ;ConfiguraLCD@a stored from wreg
  1997   000E58  6E02               	movwf	ConfiguraLCD@a^0,c
  1998                           
  1999                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  2000   000E5A  0E04               	movlw	4
  2001   000E5C  1802               	xorwf	ConfiguraLCD@a^0,w,c
  2002   000E5E  B4D8               	btfsc	status,2,c
  2003   000E60  D004               	goto	u450
  2004   000E62  0E08               	movlw	8
  2005   000E64  1802               	xorwf	ConfiguraLCD@a^0,w,c
  2006   000E66  A4D8               	btfss	status,2,c
  2007   000E68  0012               	return	
  2008   000E6A                     u450:
  2009                           
  2010                           ;LibLCDXC8.h: 57: interfaz=a;
  2011   000E6A  C002  F016         	movff	ConfiguraLCD@a,_interfaz
  2012   000E6E  0012               	return		;funcret
  2013   000E70                     __end_of_ConfiguraLCD:
  2014                           	callstack 0
  2015                           
  2016 ;; *************** function _ISR *****************
  2017 ;; Defined at:
  2018 ;;		line 176 in file "Lab4C.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2032 ;;      Params:         0       0       0       0       0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2034 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2035 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2036 ;;Total ram usage:        1 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		Interrupt level 2
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	intcode
  2046   000008                     __pintcode:
  2047                           	callstack 0
  2048   000008                     _ISR:
  2049                           	callstack 26
  2050                           
  2051                           ;incstack = 0
  2052   000008  8217               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2053   00000A  EDDD  F005         	call	int_func,f	;refresh shadow registers
  2054                           
  2055                           	psect	intcode_body
  2056   000BBA                     __pintcode_body:
  2057                           	callstack 26
  2058   000BBA                     int_func:
  2059                           	callstack 26
  2060   000BBA  0006               	pop		; remove dummy address from shadow register refresh
  2061                           
  2062                           ;Lab4C.c: 177: if(RBIF==1){
  2063   000BBC  A0F2               	btfss	4082,0,c	;volatile
  2064   000BBE  D058               	goto	i2l1342
  2065                           
  2066                           ;Lab4C.c: 178: if(PORTB!=0b11110000){
  2067   000BC0  0EF0               	movlw	240
  2068   000BC2  1881               	xorwf	129,w,c	;volatile
  2069   000BC4  B4D8               	btfsc	status,2,c
  2070   000BC6  D04B               	goto	i2l1338
  2071                           
  2072                           ;Lab4C.c: 179: Tecla=0;
  2073   000BC8  6A15               	clrf	_Tecla^0,c
  2074                           
  2075                           ;Lab4C.c: 180: LATB=0b11111110;
  2076   000BCA  0EFE               	movlw	254
  2077   000BCC  6E8A               	movwf	138,c	;volatile
  2078                           
  2079                           ;Lab4C.c: 181: if(RB4==0) Tecla=1;
  2080   000BCE  B881               	btfsc	3969,4,c	;volatile
  2081   000BD0  D002               	goto	i2l190
  2082   000BD2  0E01               	movlw	1
  2083   000BD4  D041               	goto	L18
  2084   000BD6                     i2l190:
  2085                           
  2086                           ;Lab4C.c: 182: else if(RB5==0) Tecla=2;
  2087   000BD6  BA81               	btfsc	3969,5,c	;volatile
  2088   000BD8  D002               	goto	i2l192
  2089   000BDA  0E02               	movlw	2
  2090   000BDC  D03D               	goto	L18
  2091   000BDE                     i2l192:
  2092                           
  2093                           ;Lab4C.c: 183: else if(RB6==0) Tecla=3;
  2094   000BDE  BC81               	btfsc	3969,6,c	;volatile
  2095   000BE0  D002               	goto	i2l194
  2096   000BE2  0E03               	movlw	3
  2097   000BE4  D039               	goto	L18
  2098   000BE6                     i2l194:
  2099                           
  2100                           ;Lab4C.c: 184: else if(RB7==0) Tecla=4;
  2101   000BE6  BE81               	btfsc	3969,7,c	;volatile
  2102   000BE8  D002               	goto	i2l1302
  2103   000BEA  0E04               	movlw	4
  2104   000BEC  D035               	goto	L18
  2105   000BEE                     i2l1302:
  2106                           
  2107                           ;Lab4C.c: 185: else{;Lab4C.c: 186: LATB=0b11111101;
  2108   000BEE  0EFD               	movlw	253
  2109   000BF0  6E8A               	movwf	138,c	;volatile
  2110                           
  2111                           ;Lab4C.c: 187: if(RB4==0) Tecla=5;
  2112   000BF2  B881               	btfsc	3969,4,c	;volatile
  2113   000BF4  D002               	goto	i2l198
  2114   000BF6  0E05               	movlw	5
  2115   000BF8  D02F               	goto	L18
  2116   000BFA                     i2l198:
  2117                           
  2118                           ;Lab4C.c: 188: else if(RB5==0) Tecla=6;
  2119   000BFA  BA81               	btfsc	3969,5,c	;volatile
  2120   000BFC  D002               	goto	i2l200
  2121   000BFE  0E06               	movlw	6
  2122   000C00  D02B               	goto	L18
  2123   000C02                     i2l200:
  2124                           
  2125                           ;Lab4C.c: 189: else if(RB6==0) Tecla=7;
  2126   000C02  BC81               	btfsc	3969,6,c	;volatile
  2127   000C04  D002               	goto	i2l202
  2128   000C06  0E07               	movlw	7
  2129   000C08  D027               	goto	L18
  2130   000C0A                     i2l202:
  2131                           
  2132                           ;Lab4C.c: 190: else if(RB7==0) Tecla=8;
  2133   000C0A  BE81               	btfsc	3969,7,c	;volatile
  2134   000C0C  D002               	goto	i2l1314
  2135   000C0E  0E08               	movlw	8
  2136   000C10  D023               	goto	L18
  2137   000C12                     i2l1314:
  2138                           
  2139                           ;Lab4C.c: 191: else{;Lab4C.c: 192: LATB=0b11111011;
  2140   000C12  0EFB               	movlw	251
  2141   000C14  6E8A               	movwf	138,c	;volatile
  2142                           
  2143                           ;Lab4C.c: 193: if(RB4==0) Tecla=9;
  2144   000C16  B881               	btfsc	3969,4,c	;volatile
  2145   000C18  D002               	goto	i2l206
  2146   000C1A  0E09               	movlw	9
  2147   000C1C  D01D               	goto	L18
  2148   000C1E                     i2l206:
  2149                           
  2150                           ;Lab4C.c: 194: else if(RB5==0) Tecla=10;
  2151   000C1E  BA81               	btfsc	3969,5,c	;volatile
  2152   000C20  D002               	goto	i2l208
  2153   000C22  0E0A               	movlw	10
  2154   000C24  D019               	goto	L18
  2155   000C26                     i2l208:
  2156                           
  2157                           ;Lab4C.c: 195: else if(RB6==0) Tecla=11;
  2158   000C26  BC81               	btfsc	3969,6,c	;volatile
  2159   000C28  D002               	goto	i2l210
  2160   000C2A  0E0B               	movlw	11
  2161   000C2C  D015               	goto	L18
  2162   000C2E                     i2l210:
  2163                           
  2164                           ;Lab4C.c: 196: else if(RB7==0) Tecla=12;
  2165   000C2E  BE81               	btfsc	3969,7,c	;volatile
  2166   000C30  D002               	goto	i2l1326
  2167   000C32  0E0C               	movlw	12
  2168   000C34  D011               	goto	L18
  2169   000C36                     i2l1326:
  2170                           
  2171                           ;Lab4C.c: 197: else{;Lab4C.c: 198: LATB=0b11110111;
  2172   000C36  0EF7               	movlw	247
  2173   000C38  6E8A               	movwf	138,c	;volatile
  2174                           
  2175                           ;Lab4C.c: 199: if(RB4==0) Tecla=13;
  2176   000C3A  B881               	btfsc	3969,4,c	;volatile
  2177   000C3C  D002               	goto	i2l214
  2178   000C3E  0E0D               	movlw	13
  2179   000C40  D00B               	goto	L18
  2180   000C42                     i2l214:
  2181                           
  2182                           ;Lab4C.c: 200: else if(RB5==0) Tecla=14;
  2183   000C42  BA81               	btfsc	3969,5,c	;volatile
  2184   000C44  D002               	goto	i2l216
  2185   000C46  0E0E               	movlw	14
  2186   000C48  D007               	goto	L18
  2187   000C4A                     i2l216:
  2188                           
  2189                           ;Lab4C.c: 201: else if(RB6==0) Tecla=15;
  2190   000C4A  BC81               	btfsc	3969,6,c	;volatile
  2191   000C4C  D002               	goto	i2l218
  2192   000C4E  0E0F               	movlw	15
  2193   000C50  D003               	goto	L18
  2194   000C52                     i2l218:
  2195                           
  2196                           ;Lab4C.c: 202: else if(RB7==0) Tecla=16;
  2197   000C52  BE81               	btfsc	3969,7,c	;volatile
  2198   000C54  D002               	goto	i2l215
  2199   000C56  0E10               	movlw	16
  2200   000C58                     L18:
  2201   000C58  6E15               	movwf	_Tecla^0,c
  2202   000C5A                     i2l215:
  2203                           
  2204                           ;Lab4C.c: 203: };Lab4C.c: 204: };Lab4C.c: 205: };Lab4C.c: 206: LATB=0b11110000;
  2205   000C5A  0EF0               	movlw	240
  2206   000C5C  6E8A               	movwf	138,c	;volatile
  2207   000C5E                     i2l1338:
  2208                           
  2209                           ;Lab4C.c: 207: };Lab4C.c: 208: _delay((unsigned long)((100)*(1000000/4000.0)));
  2210   000C5E  0E21               	movlw	33
  2211   000C60  6E01               	movwf	??_ISR^0,c
  2212   000C62  0E76               	movlw	118
  2213   000C64                     i2u63_47:
  2214   000C64  2EE8               	decfsz	wreg,f,c
  2215   000C66  D7FE               	bra	i2u63_47
  2216   000C68  2E01               	decfsz	??_ISR^0,f,c
  2217   000C6A  D7FC               	bra	i2u63_47
  2218   000C6C  D000               	nop2	
  2219                           
  2220                           ;Lab4C.c: 209: RBIF=0;
  2221   000C6E  90F2               	bcf	4082,0,c	;volatile
  2222   000C70                     i2l1342:
  2223                           
  2224                           ;Lab4C.c: 210: };Lab4C.c: 211: if(TMR0IF==1){
  2225   000C70  A4F2               	btfss	4082,2,c	;volatile
  2226   000C72  D00A               	goto	i2u37_45
  2227                           
  2228                           ;Lab4C.c: 212: TMR0IF=0;
  2229   000C74  94F2               	bcf	4082,2,c	;volatile
  2230                           
  2231                           ;Lab4C.c: 213: TMR0=3036;
  2232   000C76  0E0B               	movlw	11
  2233   000C78  6ED7               	movwf	215,c	;volatile
  2234   000C7A  0EDC               	movlw	220
  2235   000C7C  6ED6               	movwf	214,c	;volatile
  2236                           
  2237                           ;Lab4C.c: 214: LATD1=LATD1^1;
  2238   000C7E  B28C               	btfsc	3980,1,c	;volatile
  2239   000C80  D002               	goto	i2u36_40
  2240   000C82  828C               	bsf	3980,1,c	;volatile
  2241   000C84  D001               	goto	i2u37_45
  2242   000C86                     i2u36_40:
  2243   000C86  928C               	bcf	3980,1,c	;volatile
  2244   000C88                     i2u37_45:
  2245   000C88  9217               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2246   000C8A  0011               	retfie		f
  2247   000C8C                     __end_of_ISR:
  2248                           	callstack 0
  2249                           
  2250                           	psect	smallconst
  2251   000800                     __psmallconst:
  2252                           	callstack 0
  2253   000800  00                 	db	0
  2254   000801  00                 	db	0	; dummy byte at the end
  2255   000002                     __activetblptr  equ	2
  2256                           
  2257                           	psect	rparam
  2258   000001                     ___rparam_used  equ	1
  2259   000000                     ___param_bank   equ	0
  2260   000000                     __Lparam        equ	__Lrparam
  2261   000000                     __Hparam        equ	__Hrparam
  2262                           
  2263                           	psect	temp
  2264   000017                     btemp:
  2265                           	callstack 0
  2266   000017                     	ds	1
  2267   000017                     int$flags       set	btemp
  2268   000018                     wtemp8          set	btemp+1
  2269   000018                     ttemp5          set	btemp+1
  2270   00001B                     ttemp6          set	btemp+4
  2271   00001F                     ttemp7          set	btemp+8
  2272                           
  2273                           	psect	idloc
  2274                           
  2275                           ;Config register IDLOC0 @ 0x200000
  2276                           ;	unspecified, using default values
  2277   200000                     	org	2097152
  2278   200000  FF                 	db	255
  2279                           
  2280                           ;Config register IDLOC1 @ 0x200001
  2281                           ;	unspecified, using default values
  2282   200001                     	org	2097153
  2283   200001  FF                 	db	255
  2284                           
  2285                           ;Config register IDLOC2 @ 0x200002
  2286                           ;	unspecified, using default values
  2287   200002                     	org	2097154
  2288   200002  FF                 	db	255
  2289                           
  2290                           ;Config register IDLOC3 @ 0x200003
  2291                           ;	unspecified, using default values
  2292   200003                     	org	2097155
  2293   200003  FF                 	db	255
  2294                           
  2295                           ;Config register IDLOC4 @ 0x200004
  2296                           ;	unspecified, using default values
  2297   200004                     	org	2097156
  2298   200004  FF                 	db	255
  2299                           
  2300                           ;Config register IDLOC5 @ 0x200005
  2301                           ;	unspecified, using default values
  2302   200005                     	org	2097157
  2303   200005  FF                 	db	255
  2304                           
  2305                           ;Config register IDLOC6 @ 0x200006
  2306                           ;	unspecified, using default values
  2307   200006                     	org	2097158
  2308   200006  FF                 	db	255
  2309                           
  2310                           ;Config register IDLOC7 @ 0x200007
  2311                           ;	unspecified, using default values
  2312   200007                     	org	2097159
  2313   200007  FF                 	db	255
  2314                           
  2315                           	psect	config
  2316                           
  2317                           ;Config register CONFIG1L @ 0x300000
  2318                           ;	unspecified, using default values
  2319                           ;	PLL Prescaler Selection bits
  2320                           ;	PLLDIV = 0x0, unprogrammed default
  2321                           ;	System Clock Postscaler Selection bits
  2322                           ;	CPUDIV = 0x0, unprogrammed default
  2323                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2324                           ;	USBDIV = 0x0, unprogrammed default
  2325   300000                     	org	3145728
  2326   300000  00                 	db	0
  2327                           
  2328                           ;Config register CONFIG1H @ 0x300001
  2329                           ;	Oscillator Selection bits
  2330                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2331                           ;	Fail-Safe Clock Monitor Enable bit
  2332                           ;	FCMEN = 0x0, unprogrammed default
  2333                           ;	Internal/External Oscillator Switchover bit
  2334                           ;	IESO = 0x0, unprogrammed default
  2335   300001                     	org	3145729
  2336   300001  09                 	db	9
  2337                           
  2338                           ;Config register CONFIG2L @ 0x300002
  2339                           ;	unspecified, using default values
  2340                           ;	Power-up Timer Enable bit
  2341                           ;	PWRT = 0x1, unprogrammed default
  2342                           ;	Brown-out Reset Enable bits
  2343                           ;	BOR = 0x3, unprogrammed default
  2344                           ;	Brown-out Reset Voltage bits
  2345                           ;	BORV = 0x3, unprogrammed default
  2346                           ;	USB Voltage Regulator Enable bit
  2347                           ;	VREGEN = 0x0, unprogrammed default
  2348   300002                     	org	3145730
  2349   300002  1F                 	db	31
  2350                           
  2351                           ;Config register CONFIG2H @ 0x300003
  2352                           ;	Watchdog Timer Enable bit
  2353                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2354                           ;	Watchdog Timer Postscale Select bits
  2355                           ;	WDTPS = 0xF, unprogrammed default
  2356   300003                     	org	3145731
  2357   300003  1E                 	db	30
  2358                           
  2359                           ; Padding undefined space
  2360   300004                     	org	3145732
  2361   300004  FF                 	db	255
  2362                           
  2363                           ;Config register CONFIG3H @ 0x300005
  2364                           ;	CCP2 MUX bit
  2365                           ;	CCP2MX = 0x1, unprogrammed default
  2366                           ;	PORTB A/D Enable bit
  2367                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2368                           ;	Low-Power Timer 1 Oscillator Enable bit
  2369                           ;	LPT1OSC = 0x0, unprogrammed default
  2370                           ;	MCLR Pin Enable bit
  2371                           ;	MCLRE = 0x1, unprogrammed default
  2372   300005                     	org	3145733
  2373   300005  81                 	db	129
  2374                           
  2375                           ;Config register CONFIG4L @ 0x300006
  2376                           ;	Stack Full/Underflow Reset Enable bit
  2377                           ;	STVREN = 0x1, unprogrammed default
  2378                           ;	Single-Supply ICSP Enable bit
  2379                           ;	LVP = OFF, Single-Supply ICSP disabled
  2380                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2381                           ;	ICPRT = 0x0, unprogrammed default
  2382                           ;	Extended Instruction Set Enable bit
  2383                           ;	XINST = 0x0, unprogrammed default
  2384                           ;	Background Debugger Enable bit
  2385                           ;	DEBUG = 0x1, unprogrammed default
  2386   300006                     	org	3145734
  2387   300006  81                 	db	129
  2388                           
  2389                           ; Padding undefined space
  2390   300007                     	org	3145735
  2391   300007  FF                 	db	255
  2392                           
  2393                           ;Config register CONFIG5L @ 0x300008
  2394                           ;	unspecified, using default values
  2395                           ;	Code Protection bit
  2396                           ;	CP0 = 0x1, unprogrammed default
  2397                           ;	Code Protection bit
  2398                           ;	CP1 = 0x1, unprogrammed default
  2399                           ;	Code Protection bit
  2400                           ;	CP2 = 0x1, unprogrammed default
  2401                           ;	Code Protection bit
  2402                           ;	CP3 = 0x1, unprogrammed default
  2403   300008                     	org	3145736
  2404   300008  0F                 	db	15
  2405                           
  2406                           ;Config register CONFIG5H @ 0x300009
  2407                           ;	unspecified, using default values
  2408                           ;	Boot Block Code Protection bit
  2409                           ;	CPB = 0x1, unprogrammed default
  2410                           ;	Data EEPROM Code Protection bit
  2411                           ;	CPD = 0x1, unprogrammed default
  2412   300009                     	org	3145737
  2413   300009  C0                 	db	192
  2414                           
  2415                           ;Config register CONFIG6L @ 0x30000A
  2416                           ;	unspecified, using default values
  2417                           ;	Write Protection bit
  2418                           ;	WRT0 = 0x1, unprogrammed default
  2419                           ;	Write Protection bit
  2420                           ;	WRT1 = 0x1, unprogrammed default
  2421                           ;	Write Protection bit
  2422                           ;	WRT2 = 0x1, unprogrammed default
  2423                           ;	Write Protection bit
  2424                           ;	WRT3 = 0x1, unprogrammed default
  2425   30000A                     	org	3145738
  2426   30000A  0F                 	db	15
  2427                           
  2428                           ;Config register CONFIG6H @ 0x30000B
  2429                           ;	unspecified, using default values
  2430                           ;	Configuration Register Write Protection bit
  2431                           ;	WRTC = 0x1, unprogrammed default
  2432                           ;	Boot Block Write Protection bit
  2433                           ;	WRTB = 0x1, unprogrammed default
  2434                           ;	Data EEPROM Write Protection bit
  2435                           ;	WRTD = 0x1, unprogrammed default
  2436   30000B                     	org	3145739
  2437   30000B  E0                 	db	224
  2438                           
  2439                           ;Config register CONFIG7L @ 0x30000C
  2440                           ;	unspecified, using default values
  2441                           ;	Table Read Protection bit
  2442                           ;	EBTR0 = 0x1, unprogrammed default
  2443                           ;	Table Read Protection bit
  2444                           ;	EBTR1 = 0x1, unprogrammed default
  2445                           ;	Table Read Protection bit
  2446                           ;	EBTR2 = 0x1, unprogrammed default
  2447                           ;	Table Read Protection bit
  2448                           ;	EBTR3 = 0x1, unprogrammed default
  2449   30000C                     	org	3145740
  2450   30000C  0F                 	db	15
  2451                           
  2452                           ;Config register CONFIG7H @ 0x30000D
  2453                           ;	unspecified, using default values
  2454                           ;	Boot Block Table Read Protection bit
  2455                           ;	EBTRB = 0x1, unprogrammed default
  2456   30000D                     	org	3145741
  2457   30000D  40                 	db	64
  2458                           tosu	equ	0xFFF
  2459                           tosh	equ	0xFFE
  2460                           tosl	equ	0xFFD
  2461                           stkptr	equ	0xFFC
  2462                           pclatu	equ	0xFFB
  2463                           pclath	equ	0xFFA
  2464                           pcl	equ	0xFF9
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           prodh	equ	0xFF4
  2470                           prodl	equ	0xFF3
  2471                           indf0	equ	0xFEF
  2472                           postinc0	equ	0xFEE
  2473                           postdec0	equ	0xFED
  2474                           preinc0	equ	0xFEC
  2475                           plusw0	equ	0xFEB
  2476                           fsr0h	equ	0xFEA
  2477                           fsr0l	equ	0xFE9
  2478                           wreg	equ	0xFE8
  2479                           indf1	equ	0xFE7
  2480                           postinc1	equ	0xFE6
  2481                           postdec1	equ	0xFE5
  2482                           preinc1	equ	0xFE4
  2483                           plusw1	equ	0xFE3
  2484                           fsr1h	equ	0xFE2
  2485                           fsr1l	equ	0xFE1
  2486                           bsr	equ	0xFE0
  2487                           indf2	equ	0xFDF
  2488                           postinc2	equ	0xFDE
  2489                           postdec2	equ	0xFDD
  2490                           preinc2	equ	0xFDC
  2491                           plusw2	equ	0xFDB
  2492                           fsr2h	equ	0xFDA
  2493                           fsr2l	equ	0xFD9
  2494                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_EscribeLCD_n8
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1744
                                             14 COMRAM     5     5      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _EscribeLCD_n8
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     290
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_n8                                        5     4      1     827
                                              9 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     172
                                              1 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     173
                                              5 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_c                                         1     1      0     174
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0     174
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0     116
                                              3 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      29
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      87
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_n8
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRlh        111      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     19      22     23.4%
BITBIGSFRll         33      0       0      0.0%
BITBIGSFRh          14      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      22      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jul 16 19:11:54 2025

             EnviaDato@a 0005            _InicializaLCD 0C8C                      _GIE 7F97  
                    _RB4 7C0C                      _RB5 7C0D                      _RB6 7C0E  
                    _RB7 7C0F                      u410 0DEE                      u450 0E6A  
                    _ISR 0008                      u607 0D60                      u617 0D6A  
                    u627 0EB4                      u547 0814                      u557 082E  
                    u567 08A2                      u577 0D32                      u587 0D42  
                    u597 0D52                      wreg 0FE8                     ?_ISR 0001  
                   l1410 0E00                     l1402 0DEA                     l1414 0E08  
                   l1430 0E2C                     l1422 0E14                     l1510 0AFA  
                   l1360 0D3C                     l1520 0B40                     l1504 0ADA  
                   l1362 0D5E                     l1364 0D68                     l1380 0DC6  
                   l1358 0D2C                     l1446 0C9E                     l1368 0D72  
                   l1536 0BA4                     l1456 0CBC                     l1640 0924  
                   l1466 0CDA                     l1660 09D4                     l1398 0DE4  
                   l1486 0D12                     l1646 093A                     l1648 0942  
                   _LATB 0F8A                     _LATD 0F8C                     _RBIE 7F93  
                   _RBIF 7F90                     _RBPU 7F8F                     _TMR0 0FD6  
         ??_EscribeLCD_c 0006                     _main 0802                     btemp 0017  
                   prodl 0FF3                     start 000E             ___param_bank 0000  
                  ??_ISR 0001           ?_InicializaLCD 0001                    ?_main 0001  
        __end_of___lbdiv 0E0C            EscribeLCD_c@a 0006          __end_of___lbmod 0E34  
                  _LATD0 7C60                    _LATD1 7C61                    i2l200 0C02  
                  i2l210 0C2E                    i2l202 0C0A                    i2l214 0C42  
                  i2l206 0C1E                    i2l215 0C5A                    i2l216 0C4A  
                  i2l208 0C26                    i2l218 0C52                    i2l190 0BD6  
                  i2l192 0BDE                    i2l194 0BE6                    i2l198 0BFA  
                  _PORTB 0F81                    _TRISB 0F93                    _TRISD 0F95  
        ??_EscribeLCD_n8 000B                    _Tecla 0015                    tablat 0FF5  
            _HabilitaLCD 0EB0                    ttemp5 0018                    ttemp6 001B  
                  ttemp7 001F                    status 0FD8                    wtemp8 0018  
        ___lbdiv@divisor 0006          ___lbdiv@counter 0008         __end_of_BorraLCD 0EB0  
        __initialization 0E34             __end_of_main 0AD4                   ??_main 000F  
   __end_of_ConfiguraLCD 0E70            __activetblptr 0002           DireccionaLCD@a 0006  
         EscribeLCD_n8@a 000E           EscribeLCD_n8@b 000A                   i2l1302 0BEE  
                 i2l1314 0C12                   i2l1326 0C36                   i2l1342 0C70  
                 i2l1338 0C5E                   _TMR0IF 7F92    __end_of_DireccionaLCD 0E9C  
             _RetardoLCD 0D28     EscribeLCD_n8@centena 000B                ??___lbdiv 0007  
              ??___lbmod 0003          ??_InicializaLCD 0006                   isa$std 0001  
   __end_of_EscribeLCD_c 0E86             __pdataCOMRAM 0016             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
       ___lbdiv@dividend 0007          ___lbmod@divisor 0002               __accesstop 0060  
__end_of__initialization 0E4A          ___lbmod@counter 0004            ___rparam_used 0001  
         __pcstackCOMRAM 0001        __end_of_EnviaDato 0DD4         ___lbdiv@quotient 0009  
              ?_BorraLCD 0001              ?_RetardoLCD 0001              RetardoLCD@a 0003  
                i2u36_40 0C86                  i2u37_45 0C88                  i2u63_47 0C64  
             ??_BorraLCD 0006             ?_HabilitaLCD 0001             _ConfiguraLCD 0E58  
                __Hparam 0000                  __Lparam 0000                  ___lbdiv 0DD4  
                ___lbmod 0E0C             __psmallconst 0800                  __pcinit 0E34  
                __ramtop 0800                  __ptext0 0802                  __ptext1 0C8C  
                __ptext2 0E9C                  __ptext3 0AD4                  __ptext4 0E0C  
                __ptext5 0DD4                  __ptext6 0E70                  __ptext7 0E86  
                __ptext8 0D8E                  __ptext9 0D28    __end_of_EscribeLCD_n8 0BBA  
         __pintcode_body 0BBA     end_of_initialization 0E4A            __Lmediumconst 0000  
                int_func 0BBA             _EscribeLCD_c 0E70         ___lbmod@dividend 0003  
            ___lbmod@rem 0005               main@numero 0013            __pidataCOMRAM 0EBE  
  __end_of_InicializaLCD 0D28                _EnviaDato 0D8E            _piezasAContar 0014  
    start_initialization 0E34              __end_of_ISR 0C8C             ??_RetardoLCD 0002  
    EscribeLCD_n8@decena 000C      EscribeLCD_n8@unidad 000D               ?_EnviaDato 0001  
            __pbssCOMRAM 0014       __end_of_RetardoLCD 0D8E            _DireccionaLCD 0E86  
              __pintcode 0008                 ?___lbdiv 0006                 ?___lbmod 0002  
            __smallconst 0800           ?_DireccionaLCD 0001              ??_EnviaDato 0004  
               _BorraLCD 0E9C                 __Hrparam 0000                 __Lrparam 0000  
          ConfiguraLCD@a 0002                 _main$118 0011                 __ptext10 0EB0  
               __ptext11 0E58          ??_DireccionaLCD 0006                 _interfaz 0016  
               isa$xinst 0000                 int$flags 0017            _EscribeLCD_n8 0AD4  
               intlevel2 0000            ??_HabilitaLCD 0002            ?_ConfiguraLCD 0001  
         ?_EscribeLCD_n8 000A           ??_ConfiguraLCD 0002            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 0EBE  
