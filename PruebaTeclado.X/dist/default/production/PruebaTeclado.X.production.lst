

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 23 15:50:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.32
    18                           ; Generated 02/02/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _TMR0	set	4054
    53  0000                     _PORTB	set	3969
    54  0000                     _LATD	set	3980
    55  0000                     _LATB	set	3978
    56  0000                     _TRISD	set	3989
    57  0000                     _TRISB	set	3987
    58  0000                     _LATD1	set	31841
    59  0000                     _TMR0IF	set	32658
    60  0000                     _RB7	set	31759
    61  0000                     _RB6	set	31758
    62  0000                     _RB5	set	31757
    63  0000                     _RB4	set	31756
    64  0000                     _LATD0	set	31840
    65  0000                     _GIE	set	32663
    66  0000                     _RBIE	set	32659
    67  0000                     _RBIF	set	32656
    68  0000                     _RBPU	set	32655
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73  000144                     __pcinit:
    74                           	callstack 0
    75  000144                     start_initialization:
    76                           	callstack 0
    77  000144                     __initialization:
    78                           	callstack 0
    79                           
    80                           ; Clear objects allocated to COMRAM (1 bytes)
    81  000144  6A04               	clrf	__pbssCOMRAM& (0+255),c
    82  000146                     end_of_initialization:
    83                           	callstack 0
    84  000146                     __end_of__initialization:
    85                           	callstack 0
    86  000146  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    87  000148  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    88  00014A  0100               	movlb	0
    89  00014C  EF73  F000         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	bssCOMRAM
    92  000004                     __pbssCOMRAM:
    93                           	callstack 0
    94  000004                     _Tecla:
    95                           	callstack 0
    96  000004                     	ds	1
    97                           
    98                           	psect	cstackCOMRAM
    99  000001                     __pcstackCOMRAM:
   100                           	callstack 0
   101  000001                     ??_ISR:
   102                           
   103                           ; 1 bytes @ 0x0
   104  000001                     	ds	1
   105  000002                     ??_main:
   106                           
   107                           ; 1 bytes @ 0x1
   108  000002                     	ds	1
   109  000003                     main@i:
   110                           	callstack 0
   111                           
   112                           ; 1 bytes @ 0x2
   113  000003                     	ds	1
   114                           
   115 ;;
   116 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   117 ;;
   118 ;; *************** function _main *****************
   119 ;; Defined at:
   120 ;;		line 14 in file "PruebaTeclado.c"
   121 ;; Parameters:    Size  Location     Type
   122 ;;		None
   123 ;; Auto vars:     Size  Location     Type
   124 ;;  i               1    2[COMRAM] unsigned char 
   125 ;; Return value:  Size  Location     Type
   126 ;;                  1    wreg      void 
   127 ;; Registers used:
   128 ;;		wreg, status,2, status,0
   129 ;; Tracked objects:
   130 ;;		On entry : 0/0
   131 ;;		On exit  : 0/0
   132 ;;		Unchanged: 0/0
   133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   134 ;;      Params:         0       0       0       0       0       0       0       0       0
   135 ;;      Locals:         1       0       0       0       0       0       0       0       0
   136 ;;      Temps:          1       0       0       0       0       0       0       0       0
   137 ;;      Totals:         2       0       0       0       0       0       0       0       0
   138 ;;Total ram usage:        2 bytes
   139 ;; Hardware stack levels required when called: 1
   140 ;; This function calls:
   141 ;;		Nothing
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  0000E6                     __ptext0:
   149                           	callstack 0
   150  0000E6                     _main:
   151                           	callstack 30
   152                           
   153                           ;PruebaTeclado.c: 15: unsigned char i;;PruebaTeclado.c: 16: TRISB=0b11110000;
   154                           
   155                           ;incstack = 0
   156  0000E6  0EF0               	movlw	240
   157  0000E8  6E93               	movwf	147,c	;volatile
   158                           
   159                           ;PruebaTeclado.c: 17: TRISD=0;
   160  0000EA  0E00               	movlw	0
   161  0000EC  6E95               	movwf	149,c	;volatile
   162                           
   163                           ;PruebaTeclado.c: 18: LATB=0b00000000;
   164  0000EE  0E00               	movlw	0
   165  0000F0  6E8A               	movwf	138,c	;volatile
   166                           
   167                           ;PruebaTeclado.c: 19: LATD=0;
   168  0000F2  0E00               	movlw	0
   169  0000F4  6E8C               	movwf	140,c	;volatile
   170                           
   171                           ;PruebaTeclado.c: 20: RBPU=0;
   172  0000F6  9EF1               	bcf	4081,7,c	;volatile
   173                           
   174                           ;PruebaTeclado.c: 21: _delay((unsigned long)((100)*(1000000/4000.0)));
   175  0000F8  0E21               	movlw	33
   176  0000FA  6E02               	movwf	??_main^0,c
   177  0000FC  0E76               	movlw	118
   178  0000FE                     u237:
   179  0000FE  2EE8               	decfsz	wreg,f,c
   180  000100  D7FE               	bra	u237
   181  000102  2E02               	decfsz	??_main^0,f,c
   182  000104  D7FC               	bra	u237
   183  000106  D000               	nop2	
   184                           
   185                           ;PruebaTeclado.c: 27: RBIF=0;
   186  000108  90F2               	bcf	4082,0,c	;volatile
   187                           
   188                           ;PruebaTeclado.c: 28: RBIE=1;
   189  00010A  86F2               	bsf	4082,3,c	;volatile
   190                           
   191                           ;PruebaTeclado.c: 29: GIE=1;
   192  00010C  8EF2               	bsf	4082,7,c	;volatile
   193  00010E                     l872:
   194                           
   195                           ;PruebaTeclado.c: 62: for(i=0;i<Tecla;i++){
   196  00010E  0E00               	movlw	0
   197  000110  6E03               	movwf	main@i^0,c
   198  000112  D011               	goto	l44
   199  000114                     l45:
   200                           
   201                           ;PruebaTeclado.c: 63: LATD0=1;
   202  000114  808C               	bsf	3980,0,c	;volatile
   203                           
   204                           ;PruebaTeclado.c: 64: _delay((unsigned long)((400)*(1000000/4000.0)));
   205  000116  0E82               	movlw	130
   206  000118  6E02               	movwf	??_main^0,c
   207  00011A  0EDE               	movlw	222
   208  00011C                     u247:
   209  00011C  2EE8               	decfsz	wreg,f,c
   210  00011E  D7FE               	bra	u247
   211  000120  2E02               	decfsz	??_main^0,f,c
   212  000122  D7FC               	bra	u247
   213                           
   214                           ;PruebaTeclado.c: 65: LATD0=0;
   215  000124  908C               	bcf	3980,0,c	;volatile
   216                           
   217                           ;PruebaTeclado.c: 66: _delay((unsigned long)((400)*(1000000/4000.0)));
   218  000126  0E82               	movlw	130
   219  000128  6E02               	movwf	??_main^0,c
   220  00012A  0EDE               	movlw	222
   221  00012C                     u257:
   222  00012C  2EE8               	decfsz	wreg,f,c
   223  00012E  D7FE               	bra	u257
   224  000130  2E02               	decfsz	??_main^0,f,c
   225  000132  D7FC               	bra	u257
   226  000134  2A03               	incf	main@i^0,f,c
   227  000136                     l44:
   228  000136  5004               	movf	_Tecla^0,w,c
   229  000138  5C03               	subwf	main@i^0,w,c
   230  00013A  A0D8               	btfss	status,0,c
   231  00013C  D7EB               	goto	l45
   232                           
   233                           ;PruebaTeclado.c: 67: };PruebaTeclado.c: 68: Tecla=0;
   234  00013E  0E00               	movlw	0
   235  000140  6E04               	movwf	_Tecla^0,c
   236  000142  D7E5               	goto	l872
   237  000144                     __end_of_main:
   238                           	callstack 0
   239                           
   240 ;; *************** function _ISR *****************
   241 ;; Defined at:
   242 ;;		line 95 in file "PruebaTeclado.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   256 ;;      Params:         0       0       0       0       0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0       0       0
   258 ;;      Temps:          1       0       0       0       0       0       0       0       0
   259 ;;      Totals:         1       0       0       0       0       0       0       0       0
   260 ;;Total ram usage:        1 bytes
   261 ;; Hardware stack levels used: 1
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		Interrupt level 2
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	intcode
   270  000008                     __pintcode:
   271                           	callstack 0
   272  000008                     _ISR:
   273                           	callstack 30
   274                           
   275                           ;incstack = 0
   276  000008  8205               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   277  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   278                           
   279                           	psect	intcode_body
   280  000012                     __pintcode_body:
   281                           	callstack 30
   282  000012                     int_func:
   283                           	callstack 30
   284  000012  0006               	pop		; remove dummy address from shadow register refresh
   285                           
   286                           ;PruebaTeclado.c: 96: if(RBIF==1){
   287  000014  A0F2               	btfss	4082,0,c	;volatile
   288  000016  D059               	goto	i2l938
   289                           
   290                           ;PruebaTeclado.c: 97: if(PORTB!=0b11110000){
   291  000018  0EF0               	movlw	240
   292  00001A  1881               	xorwf	129,w,c	;volatile
   293  00001C  B4D8               	btfsc	status,2,c
   294  00001E  D04C               	goto	i2l934
   295                           
   296                           ;PruebaTeclado.c: 98: Tecla=0;
   297  000020  0E00               	movlw	0
   298  000022  6E04               	movwf	_Tecla^0,c
   299                           
   300                           ;PruebaTeclado.c: 99: LATB=0b11111110;
   301  000024  0EFE               	movlw	254
   302  000026  6E8A               	movwf	138,c	;volatile
   303                           
   304                           ;PruebaTeclado.c: 100: if(RB4==0) Tecla=1;
   305  000028  B881               	btfsc	3969,4,c	;volatile
   306  00002A  D002               	goto	i2l80
   307  00002C  0E01               	movlw	1
   308  00002E  D041               	goto	L15
   309  000030                     i2l80:
   310                           
   311                           ;PruebaTeclado.c: 101: else if(RB5==0) Tecla=2;
   312  000030  BA81               	btfsc	3969,5,c	;volatile
   313  000032  D002               	goto	i2l82
   314  000034  0E02               	movlw	2
   315  000036  D03D               	goto	L15
   316  000038                     i2l82:
   317                           
   318                           ;PruebaTeclado.c: 102: else if(RB6==0) Tecla=3;
   319  000038  BC81               	btfsc	3969,6,c	;volatile
   320  00003A  D002               	goto	i2l84
   321  00003C  0E03               	movlw	3
   322  00003E  D039               	goto	L15
   323  000040                     i2l84:
   324                           
   325                           ;PruebaTeclado.c: 103: else if(RB7==0) Tecla=4;
   326  000040  BE81               	btfsc	3969,7,c	;volatile
   327  000042  D002               	goto	i2l898
   328  000044  0E04               	movlw	4
   329  000046  D035               	goto	L15
   330  000048                     i2l898:
   331                           
   332                           ;PruebaTeclado.c: 104: else{;PruebaTeclado.c: 105: LATB=0b11111101;
   333  000048  0EFD               	movlw	253
   334  00004A  6E8A               	movwf	138,c	;volatile
   335                           
   336                           ;PruebaTeclado.c: 106: if(RB4==0) Tecla=5;
   337  00004C  B881               	btfsc	3969,4,c	;volatile
   338  00004E  D002               	goto	i2l88
   339  000050  0E05               	movlw	5
   340  000052  D02F               	goto	L15
   341  000054                     i2l88:
   342                           
   343                           ;PruebaTeclado.c: 107: else if(RB5==0) Tecla=6;
   344  000054  BA81               	btfsc	3969,5,c	;volatile
   345  000056  D002               	goto	i2l90
   346  000058  0E06               	movlw	6
   347  00005A  D02B               	goto	L15
   348  00005C                     i2l90:
   349                           
   350                           ;PruebaTeclado.c: 108: else if(RB6==0) Tecla=7;
   351  00005C  BC81               	btfsc	3969,6,c	;volatile
   352  00005E  D002               	goto	i2l92
   353  000060  0E07               	movlw	7
   354  000062  D027               	goto	L15
   355  000064                     i2l92:
   356                           
   357                           ;PruebaTeclado.c: 109: else if(RB7==0) Tecla=8;
   358  000064  BE81               	btfsc	3969,7,c	;volatile
   359  000066  D002               	goto	i2l910
   360  000068  0E08               	movlw	8
   361  00006A  D023               	goto	L15
   362  00006C                     i2l910:
   363                           
   364                           ;PruebaTeclado.c: 110: else{;PruebaTeclado.c: 111: LATB=0b11111011;
   365  00006C  0EFB               	movlw	251
   366  00006E  6E8A               	movwf	138,c	;volatile
   367                           
   368                           ;PruebaTeclado.c: 112: if(RB4==0) Tecla=9;
   369  000070  B881               	btfsc	3969,4,c	;volatile
   370  000072  D002               	goto	i2l96
   371  000074  0E09               	movlw	9
   372  000076  D01D               	goto	L15
   373  000078                     i2l96:
   374                           
   375                           ;PruebaTeclado.c: 113: else if(RB5==0) Tecla=10;
   376  000078  BA81               	btfsc	3969,5,c	;volatile
   377  00007A  D002               	goto	i2l98
   378  00007C  0E0A               	movlw	10
   379  00007E  D019               	goto	L15
   380  000080                     i2l98:
   381                           
   382                           ;PruebaTeclado.c: 114: else if(RB6==0) Tecla=11;
   383  000080  BC81               	btfsc	3969,6,c	;volatile
   384  000082  D002               	goto	i2l100
   385  000084  0E0B               	movlw	11
   386  000086  D015               	goto	L15
   387  000088                     i2l100:
   388                           
   389                           ;PruebaTeclado.c: 115: else if(RB7==0) Tecla=12;
   390  000088  BE81               	btfsc	3969,7,c	;volatile
   391  00008A  D002               	goto	i2l922
   392  00008C  0E0C               	movlw	12
   393  00008E  D011               	goto	L15
   394  000090                     i2l922:
   395                           
   396                           ;PruebaTeclado.c: 116: else{;PruebaTeclado.c: 117: LATB=0b11110111;
   397  000090  0EF7               	movlw	247
   398  000092  6E8A               	movwf	138,c	;volatile
   399                           
   400                           ;PruebaTeclado.c: 118: if(RB4==0) Tecla=13;
   401  000094  B881               	btfsc	3969,4,c	;volatile
   402  000096  D002               	goto	i2l104
   403  000098  0E0D               	movlw	13
   404  00009A  D00B               	goto	L15
   405  00009C                     i2l104:
   406                           
   407                           ;PruebaTeclado.c: 119: else if(RB5==0) Tecla=14;
   408  00009C  BA81               	btfsc	3969,5,c	;volatile
   409  00009E  D002               	goto	i2l106
   410  0000A0  0E0E               	movlw	14
   411  0000A2  D007               	goto	L15
   412  0000A4                     i2l106:
   413                           
   414                           ;PruebaTeclado.c: 120: else if(RB6==0) Tecla=15;
   415  0000A4  BC81               	btfsc	3969,6,c	;volatile
   416  0000A6  D002               	goto	i2l108
   417  0000A8  0E0F               	movlw	15
   418  0000AA  D003               	goto	L15
   419  0000AC                     i2l108:
   420                           
   421                           ;PruebaTeclado.c: 121: else if(RB7==0) Tecla=16;
   422  0000AC  BE81               	btfsc	3969,7,c	;volatile
   423  0000AE  D002               	goto	i2l105
   424  0000B0  0E10               	movlw	16
   425  0000B2                     L15:
   426  0000B2  6E04               	movwf	_Tecla^0,c
   427  0000B4                     i2l105:
   428                           
   429                           ;PruebaTeclado.c: 122: };PruebaTeclado.c: 123: };PruebaTeclado.c: 124: };PruebaTeclado.c
      +                          : 125: LATB=0b11110000;
   430  0000B4  0EF0               	movlw	240
   431  0000B6  6E8A               	movwf	138,c	;volatile
   432  0000B8                     i2l934:
   433                           
   434                           ;PruebaTeclado.c: 126: };PruebaTeclado.c: 127: _delay((unsigned long)((100)*(1000000/400
      +                          0.0)));
   435  0000B8  0E21               	movlw	33
   436  0000BA  6E01               	movwf	??_ISR^0,c
   437  0000BC  0E76               	movlw	118
   438  0000BE                     i2u26_47:
   439  0000BE  2EE8               	decfsz	wreg,f,c
   440  0000C0  D7FE               	bra	i2u26_47
   441  0000C2  2E01               	decfsz	??_ISR^0,f,c
   442  0000C4  D7FC               	bra	i2u26_47
   443  0000C6  D000               	nop2	
   444                           
   445                           ;PruebaTeclado.c: 128: RBIF=0;
   446  0000C8  90F2               	bcf	4082,0,c	;volatile
   447  0000CA                     i2l938:
   448                           
   449                           ;PruebaTeclado.c: 129: };PruebaTeclado.c: 130: if(TMR0IF==1){
   450  0000CA  A4F2               	btfss	4082,2,c	;volatile
   451  0000CC  D00A               	goto	i2u22_45
   452                           
   453                           ;PruebaTeclado.c: 131: TMR0IF=0;
   454  0000CE  94F2               	bcf	4082,2,c	;volatile
   455                           
   456                           ;PruebaTeclado.c: 132: TMR0=3036;
   457  0000D0  0E0B               	movlw	11
   458  0000D2  6ED7               	movwf	215,c	;volatile
   459  0000D4  0EDC               	movlw	220
   460  0000D6  6ED6               	movwf	214,c	;volatile
   461                           
   462                           ;PruebaTeclado.c: 133: LATD1=LATD1^1;
   463  0000D8  B28C               	btfsc	3980,1,c	;volatile
   464  0000DA  D002               	goto	i2u21_40
   465  0000DC  828C               	bsf	3980,1,c	;volatile
   466  0000DE  D001               	goto	i2u22_45
   467  0000E0                     i2u21_40:
   468  0000E0  928C               	bcf	3980,1,c	;volatile
   469  0000E2                     i2u22_45:
   470  0000E2  9205               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   471  0000E4  0011               	retfie		f
   472  0000E6                     __end_of_ISR:
   473                           	callstack 0
   474  0000                     
   475                           	psect	rparam
   476  0000                     
   477                           	psect	temp
   478  000005                     btemp:
   479                           	callstack 0
   480  000005                     	ds	1
   481  0000                     int$flags	set	btemp
   482  0000                     wtemp8	set	btemp+1
   483  0000                     ttemp5	set	btemp+1
   484  0000                     ttemp6	set	btemp+4
   485  0000                     ttemp7	set	btemp+8
   486                           
   487                           	psect	idloc
   488                           
   489                           ;Config register IDLOC0 @ 0x200000
   490                           ;	unspecified, using default values
   491  200000                     	org	2097152
   492  200000  FF                 	db	255
   493                           
   494                           ;Config register IDLOC1 @ 0x200001
   495                           ;	unspecified, using default values
   496  200001                     	org	2097153
   497  200001  FF                 	db	255
   498                           
   499                           ;Config register IDLOC2 @ 0x200002
   500                           ;	unspecified, using default values
   501  200002                     	org	2097154
   502  200002  FF                 	db	255
   503                           
   504                           ;Config register IDLOC3 @ 0x200003
   505                           ;	unspecified, using default values
   506  200003                     	org	2097155
   507  200003  FF                 	db	255
   508                           
   509                           ;Config register IDLOC4 @ 0x200004
   510                           ;	unspecified, using default values
   511  200004                     	org	2097156
   512  200004  FF                 	db	255
   513                           
   514                           ;Config register IDLOC5 @ 0x200005
   515                           ;	unspecified, using default values
   516  200005                     	org	2097157
   517  200005  FF                 	db	255
   518                           
   519                           ;Config register IDLOC6 @ 0x200006
   520                           ;	unspecified, using default values
   521  200006                     	org	2097158
   522  200006  FF                 	db	255
   523                           
   524                           ;Config register IDLOC7 @ 0x200007
   525                           ;	unspecified, using default values
   526  200007                     	org	2097159
   527  200007  FF                 	db	255
   528                           
   529                           	psect	config
   530                           
   531                           ;Config register CONFIG1L @ 0x300000
   532                           ;	unspecified, using default values
   533                           ;	PLL Prescaler Selection bits
   534                           ;	PLLDIV = 0x0, unprogrammed default
   535                           ;	System Clock Postscaler Selection bits
   536                           ;	CPUDIV = 0x0, unprogrammed default
   537                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   538                           ;	USBDIV = 0x0, unprogrammed default
   539  300000                     	org	3145728
   540  300000  00                 	db	0
   541                           
   542                           ;Config register CONFIG1H @ 0x300001
   543                           ;	Oscillator Selection bits
   544                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
   545                           ;	Fail-Safe Clock Monitor Enable bit
   546                           ;	FCMEN = 0x0, unprogrammed default
   547                           ;	Internal/External Oscillator Switchover bit
   548                           ;	IESO = 0x0, unprogrammed default
   549  300001                     	org	3145729
   550  300001  09                 	db	9
   551                           
   552                           ;Config register CONFIG2L @ 0x300002
   553                           ;	unspecified, using default values
   554                           ;	Power-up Timer Enable bit
   555                           ;	PWRT = 0x1, unprogrammed default
   556                           ;	Brown-out Reset Enable bits
   557                           ;	BOR = 0x3, unprogrammed default
   558                           ;	Brown-out Reset Voltage bits
   559                           ;	BORV = 0x3, unprogrammed default
   560                           ;	USB Voltage Regulator Enable bit
   561                           ;	VREGEN = 0x0, unprogrammed default
   562  300002                     	org	3145730
   563  300002  1F                 	db	31
   564                           
   565                           ;Config register CONFIG2H @ 0x300003
   566                           ;	Watchdog Timer Enable bit
   567                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   568                           ;	Watchdog Timer Postscale Select bits
   569                           ;	WDTPS = 0xF, unprogrammed default
   570  300003                     	org	3145731
   571  300003  1E                 	db	30
   572                           
   573                           ; Padding undefined space
   574  300004                     	org	3145732
   575  300004  FF                 	db	255
   576                           
   577                           ;Config register CONFIG3H @ 0x300005
   578                           ;	CCP2 MUX bit
   579                           ;	CCP2MX = 0x1, unprogrammed default
   580                           ;	PORTB A/D Enable bit
   581                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   582                           ;	Low-Power Timer 1 Oscillator Enable bit
   583                           ;	LPT1OSC = 0x0, unprogrammed default
   584                           ;	MCLR Pin Enable bit
   585                           ;	MCLRE = 0x1, unprogrammed default
   586  300005                     	org	3145733
   587  300005  81                 	db	129
   588                           
   589                           ;Config register CONFIG4L @ 0x300006
   590                           ;	Stack Full/Underflow Reset Enable bit
   591                           ;	STVREN = 0x1, unprogrammed default
   592                           ;	Single-Supply ICSP Enable bit
   593                           ;	LVP = OFF, Single-Supply ICSP disabled
   594                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   595                           ;	ICPRT = 0x0, unprogrammed default
   596                           ;	Extended Instruction Set Enable bit
   597                           ;	XINST = 0x0, unprogrammed default
   598                           ;	Background Debugger Enable bit
   599                           ;	DEBUG = 0x1, unprogrammed default
   600  300006                     	org	3145734
   601  300006  81                 	db	129
   602                           
   603                           ; Padding undefined space
   604  300007                     	org	3145735
   605  300007  FF                 	db	255
   606                           
   607                           ;Config register CONFIG5L @ 0x300008
   608                           ;	unspecified, using default values
   609                           ;	Code Protection bit
   610                           ;	CP0 = 0x1, unprogrammed default
   611                           ;	Code Protection bit
   612                           ;	CP1 = 0x1, unprogrammed default
   613                           ;	Code Protection bit
   614                           ;	CP2 = 0x1, unprogrammed default
   615                           ;	Code Protection bit
   616                           ;	CP3 = 0x1, unprogrammed default
   617  300008                     	org	3145736
   618  300008  0F                 	db	15
   619                           
   620                           ;Config register CONFIG5H @ 0x300009
   621                           ;	unspecified, using default values
   622                           ;	Boot Block Code Protection bit
   623                           ;	CPB = 0x1, unprogrammed default
   624                           ;	Data EEPROM Code Protection bit
   625                           ;	CPD = 0x1, unprogrammed default
   626  300009                     	org	3145737
   627  300009  C0                 	db	192
   628                           
   629                           ;Config register CONFIG6L @ 0x30000A
   630                           ;	unspecified, using default values
   631                           ;	Write Protection bit
   632                           ;	WRT0 = 0x1, unprogrammed default
   633                           ;	Write Protection bit
   634                           ;	WRT1 = 0x1, unprogrammed default
   635                           ;	Write Protection bit
   636                           ;	WRT2 = 0x1, unprogrammed default
   637                           ;	Write Protection bit
   638                           ;	WRT3 = 0x1, unprogrammed default
   639  30000A                     	org	3145738
   640  30000A  0F                 	db	15
   641                           
   642                           ;Config register CONFIG6H @ 0x30000B
   643                           ;	unspecified, using default values
   644                           ;	Configuration Register Write Protection bit
   645                           ;	WRTC = 0x1, unprogrammed default
   646                           ;	Boot Block Write Protection bit
   647                           ;	WRTB = 0x1, unprogrammed default
   648                           ;	Data EEPROM Write Protection bit
   649                           ;	WRTD = 0x1, unprogrammed default
   650  30000B                     	org	3145739
   651  30000B  E0                 	db	224
   652                           
   653                           ;Config register CONFIG7L @ 0x30000C
   654                           ;	unspecified, using default values
   655                           ;	Table Read Protection bit
   656                           ;	EBTR0 = 0x1, unprogrammed default
   657                           ;	Table Read Protection bit
   658                           ;	EBTR1 = 0x1, unprogrammed default
   659                           ;	Table Read Protection bit
   660                           ;	EBTR2 = 0x1, unprogrammed default
   661                           ;	Table Read Protection bit
   662                           ;	EBTR3 = 0x1, unprogrammed default
   663  30000C                     	org	3145740
   664  30000C  0F                 	db	15
   665                           
   666                           ;Config register CONFIG7H @ 0x30000D
   667                           ;	unspecified, using default values
   668                           ;	Boot Block Table Read Protection bit
   669                           ;	EBTRB = 0x1, unprogrammed default
   670  30000D                     	org	3145741
   671  30000D  40                 	db	64
   672                           tosu	equ	0xFFF
   673                           tosh	equ	0xFFE
   674                           tosl	equ	0xFFD
   675                           stkptr	equ	0xFFC
   676                           pclatu	equ	0xFFB
   677                           pclath	equ	0xFFA
   678                           pcl	equ	0xFF9
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           prodh	equ	0xFF4
   684                           prodl	equ	0xFF3
   685                           indf0	equ	0xFEF
   686                           postinc0	equ	0xFEE
   687                           postdec0	equ	0xFED
   688                           preinc0	equ	0xFEC
   689                           plusw0	equ	0xFEB
   690                           fsr0h	equ	0xFEA
   691                           fsr0l	equ	0xFE9
   692                           wreg	equ	0xFE8
   693                           indf1	equ	0xFE7
   694                           postinc1	equ	0xFE6
   695                           postdec1	equ	0xFE5
   696                           preinc1	equ	0xFE4
   697                           plusw1	equ	0xFE3
   698                           fsr1h	equ	0xFE2
   699                           fsr1l	equ	0xFE1
   700                           bsr	equ	0xFE0
   701                           indf2	equ	0xFDF
   702                           postinc2	equ	0xFDE
   703                           postdec2	equ	0xFDD
   704                           preinc2	equ	0xFDC
   705                           plusw2	equ	0xFDB
   706                           fsr2h	equ	0xFDA
   707                           fsr2l	equ	0xFD9
   708                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3       4       1        4.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      20        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 23 15:50:57 2021

                     l44 0136                       l45 0114                      l872 010E  
                    _GIE 007F97                      _RB4 007C0C                      _RB5 007C0D  
                    _RB6 007C0E                      _RB7 007C0F                      u237 00FE  
                    u247 011C                      u257 012C                      _ISR 0008  
                    wreg 000FE8                     ?_ISR 0001                     _LATB 000F8A  
                   _LATD 000F8C                     _RBIE 007F93                     _RBIF 007F90  
                   i2l80 0030                     i2l90 005C                     i2l82 0038  
                   i2l92 0064                     i2l84 0040                     i2l96 0078  
                   i2l88 0054                     i2l98 0080                     _RBPU 007F8F  
                   _TMR0 000FD6                     _main 00E6                     btemp 0005  
                   start 000E             ___param_bank 000000                    ??_ISR 0001  
                  ?_main 0001                    _LATD0 007C60                    _LATD1 007C61  
                  i2l100 0088                    i2l104 009C                    i2l105 00B4  
                  i2l106 00A4                    i2l108 00AC                    i2l910 006C  
                  i2l922 0090                    i2l934 00B8                    i2l938 00CA  
                  i2l898 0048                    _PORTB 000F81                    _TRISB 000F93  
                  _TRISD 000F95                    _Tecla 0004                    main@i 0003  
                  ttemp5 0006                    ttemp6 0009                    ttemp7 000D  
                  status 000FD8                    wtemp8 0006          __initialization 0144  
           __end_of_main 0144                   ??_main 0002            __activetblptr 000000  
                 _TMR0IF 007F92                   isa$std 000001               __accesstop 0060  
__end_of__initialization 0146            ___rparam_used 000001           __pcstackCOMRAM 0001  
                i2u21_40 00E0                  i2u22_45 00E2                  i2u26_47 00BE  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0144  
                __ramtop 0800                  __ptext0 00E6             __size_of_ISR 00DE  
         __pintcode_body 0012     end_of_initialization 0146                  int_func 0012  
    start_initialization 0144              __end_of_ISR 00E6              __pbssCOMRAM 0004  
              __pintcode 0008                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 005E                 isa$xinst 000000                 int$flags 0005  
               intlevel2 0000  
