

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jun 19 14:26:37 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 25/07/2024 GMT
    23                           ; 
    24                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000FE0                     bsr             equ	4064
    57   000FE9                     fsr0            equ	4073
    58   000FEA                     fsr0h           equ	4074
    59   000FE9                     fsr0l           equ	4073
    60   000FE1                     fsr1            equ	4065
    61   000FE2                     fsr1h           equ	4066
    62   000FE1                     fsr1l           equ	4065
    63   000FD9                     fsr2            equ	4057
    64   000FDA                     fsr2h           equ	4058
    65   000FD9                     fsr2l           equ	4057
    66   000FEF                     indf0           equ	4079
    67   000FE7                     indf1           equ	4071
    68   000FDF                     indf2           equ	4063
    69   000FF2                     intcon          equ	4082
    70   000000                     nvmcon          equ	0
    71   000FF9                     pcl             equ	4089
    72   000FFA                     pclath          equ	4090
    73   000FFB                     pclatu          equ	4091
    74   000FEB                     plusw0          equ	4075
    75   000FE3                     plusw1          equ	4067
    76   000FDB                     plusw2          equ	4059
    77   000FED                     postdec0        equ	4077
    78   000FE5                     postdec1        equ	4069
    79   000FDD                     postdec2        equ	4061
    80   000FEE                     postinc0        equ	4078
    81   000FE6                     postinc1        equ	4070
    82   000FDE                     postinc2        equ	4062
    83   000FEC                     preinc0         equ	4076
    84   000FE4                     preinc1         equ	4068
    85   000FDC                     preinc2         equ	4060
    86   000FF3                     prod            equ	4083
    87   000FF4                     prodh           equ	4084
    88   000FF3                     prodl           equ	4083
    89   000FD8                     status          equ	4056
    90   000FF5                     tablat          equ	4085
    91   000FF6                     tblptr          equ	4086
    92   000FF7                     tblptrh         equ	4087
    93   000FF6                     tblptrl         equ	4086
    94   000FF8                     tblptru         equ	4088
    95   000FFD                     tosl            equ	4093
    96   000FE8                     wreg            equ	4072
    97   000F62                     SPPDATA         equ	3938	;# 
    98   000F63                     SPPCFG          equ	3939	;# 
    99   000F64                     SPPEPS          equ	3940	;# 
   100   000F65                     SPPCON          equ	3941	;# 
   101   000F66                     UFRM            equ	3942	;# 
   102   000F66                     UFRML           equ	3942	;# 
   103   000F67                     UFRMH           equ	3943	;# 
   104   000F68                     UIR             equ	3944	;# 
   105   000F69                     UIE             equ	3945	;# 
   106   000F6A                     UEIR            equ	3946	;# 
   107   000F6B                     UEIE            equ	3947	;# 
   108   000F6C                     USTAT           equ	3948	;# 
   109   000F6D                     UCON            equ	3949	;# 
   110   000F6E                     UADDR           equ	3950	;# 
   111   000F6F                     UCFG            equ	3951	;# 
   112   000F70                     UEP0            equ	3952	;# 
   113   000F71                     UEP1            equ	3953	;# 
   114   000F72                     UEP2            equ	3954	;# 
   115   000F73                     UEP3            equ	3955	;# 
   116   000F74                     UEP4            equ	3956	;# 
   117   000F75                     UEP5            equ	3957	;# 
   118   000F76                     UEP6            equ	3958	;# 
   119   000F77                     UEP7            equ	3959	;# 
   120   000F78                     UEP8            equ	3960	;# 
   121   000F79                     UEP9            equ	3961	;# 
   122   000F7A                     UEP10           equ	3962	;# 
   123   000F7B                     UEP11           equ	3963	;# 
   124   000F7C                     UEP12           equ	3964	;# 
   125   000F7D                     UEP13           equ	3965	;# 
   126   000F7E                     UEP14           equ	3966	;# 
   127   000F7F                     UEP15           equ	3967	;# 
   128   000F80                     PORTA           equ	3968	;# 
   129   000F81                     PORTB           equ	3969	;# 
   130   000F82                     PORTC           equ	3970	;# 
   131   000F83                     PORTD           equ	3971	;# 
   132   000F84                     PORTE           equ	3972	;# 
   133   000F89                     LATA            equ	3977	;# 
   134   000F8A                     LATB            equ	3978	;# 
   135   000F8B                     LATC            equ	3979	;# 
   136   000F8C                     LATD            equ	3980	;# 
   137   000F8D                     LATE            equ	3981	;# 
   138   000F92                     TRISA           equ	3986	;# 
   139   000F92                     DDRA            equ	3986	;# 
   140   000F93                     TRISB           equ	3987	;# 
   141   000F93                     DDRB            equ	3987	;# 
   142   000F94                     TRISC           equ	3988	;# 
   143   000F94                     DDRC            equ	3988	;# 
   144   000F95                     TRISD           equ	3989	;# 
   145   000F95                     DDRD            equ	3989	;# 
   146   000F96                     TRISE           equ	3990	;# 
   147   000F96                     DDRE            equ	3990	;# 
   148   000F9B                     OSCTUNE         equ	3995	;# 
   149   000F9D                     PIE1            equ	3997	;# 
   150   000F9E                     PIR1            equ	3998	;# 
   151   000F9F                     IPR1            equ	3999	;# 
   152   000FA0                     PIE2            equ	4000	;# 
   153   000FA1                     PIR2            equ	4001	;# 
   154   000FA2                     IPR2            equ	4002	;# 
   155   000FA6                     EECON1          equ	4006	;# 
   156   000FA7                     EECON2          equ	4007	;# 
   157   000FA8                     EEDATA          equ	4008	;# 
   158   000FA9                     EEADR           equ	4009	;# 
   159   000FAB                     RCSTA           equ	4011	;# 
   160   000FAB                     RCSTA1          equ	4011	;# 
   161   000FAC                     TXSTA           equ	4012	;# 
   162   000FAC                     TXSTA1          equ	4012	;# 
   163   000FAD                     TXREG           equ	4013	;# 
   164   000FAD                     TXREG1          equ	4013	;# 
   165   000FAE                     RCREG           equ	4014	;# 
   166   000FAE                     RCREG1          equ	4014	;# 
   167   000FAF                     SPBRG           equ	4015	;# 
   168   000FAF                     SPBRG1          equ	4015	;# 
   169   000FB0                     SPBRGH          equ	4016	;# 
   170   000FB1                     T3CON           equ	4017	;# 
   171   000FB2                     TMR3            equ	4018	;# 
   172   000FB2                     TMR3L           equ	4018	;# 
   173   000FB3                     TMR3H           equ	4019	;# 
   174   000FB4                     CMCON           equ	4020	;# 
   175   000FB5                     CVRCON          equ	4021	;# 
   176   000FB6                     ECCP1AS         equ	4022	;# 
   177   000FB6                     CCP1AS          equ	4022	;# 
   178   000FB7                     ECCP1DEL        equ	4023	;# 
   179   000FB7                     CCP1DEL         equ	4023	;# 
   180   000FB8                     BAUDCON         equ	4024	;# 
   181   000FB8                     BAUDCTL         equ	4024	;# 
   182   000FBA                     CCP2CON         equ	4026	;# 
   183   000FBB                     CCPR2           equ	4027	;# 
   184   000FBB                     CCPR2L          equ	4027	;# 
   185   000FBC                     CCPR2H          equ	4028	;# 
   186   000FBD                     CCP1CON         equ	4029	;# 
   187   000FBD                     ECCP1CON        equ	4029	;# 
   188   000FBE                     CCPR1           equ	4030	;# 
   189   000FBE                     CCPR1L          equ	4030	;# 
   190   000FBF                     CCPR1H          equ	4031	;# 
   191   000FC0                     ADCON2          equ	4032	;# 
   192   000FC1                     ADCON1          equ	4033	;# 
   193   000FC2                     ADCON0          equ	4034	;# 
   194   000FC3                     ADRES           equ	4035	;# 
   195   000FC3                     ADRESL          equ	4035	;# 
   196   000FC4                     ADRESH          equ	4036	;# 
   197   000FC5                     SSPCON2         equ	4037	;# 
   198   000FC6                     SSPCON1         equ	4038	;# 
   199   000FC7                     SSPSTAT         equ	4039	;# 
   200   000FC8                     SSPADD          equ	4040	;# 
   201   000FC9                     SSPBUF          equ	4041	;# 
   202   000FCA                     T2CON           equ	4042	;# 
   203   000FCB                     PR2             equ	4043	;# 
   204   000FCB                     MEMCON          equ	4043	;# 
   205   000FCC                     TMR2            equ	4044	;# 
   206   000FCD                     T1CON           equ	4045	;# 
   207   000FCE                     TMR1            equ	4046	;# 
   208   000FCE                     TMR1L           equ	4046	;# 
   209   000FCF                     TMR1H           equ	4047	;# 
   210   000FD0                     RCON            equ	4048	;# 
   211   000FD1                     WDTCON          equ	4049	;# 
   212   000FD2                     HLVDCON         equ	4050	;# 
   213   000FD2                     LVDCON          equ	4050	;# 
   214   000FD3                     OSCCON          equ	4051	;# 
   215   000FD5                     T0CON           equ	4053	;# 
   216   000FD6                     TMR0            equ	4054	;# 
   217   000FD6                     TMR0L           equ	4054	;# 
   218   000FD7                     TMR0H           equ	4055	;# 
   219   000FD8                     STATUS          equ	4056	;# 
   220   000FD9                     FSR2            equ	4057	;# 
   221   000FD9                     FSR2L           equ	4057	;# 
   222   000FDA                     FSR2H           equ	4058	;# 
   223   000FDB                     PLUSW2          equ	4059	;# 
   224   000FDC                     PREINC2         equ	4060	;# 
   225   000FDD                     POSTDEC2        equ	4061	;# 
   226   000FDE                     POSTINC2        equ	4062	;# 
   227   000FDF                     INDF2           equ	4063	;# 
   228   000FE0                     BSR             equ	4064	;# 
   229   000FE1                     FSR1            equ	4065	;# 
   230   000FE1                     FSR1L           equ	4065	;# 
   231   000FE2                     FSR1H           equ	4066	;# 
   232   000FE3                     PLUSW1          equ	4067	;# 
   233   000FE4                     PREINC1         equ	4068	;# 
   234   000FE5                     POSTDEC1        equ	4069	;# 
   235   000FE6                     POSTINC1        equ	4070	;# 
   236   000FE7                     INDF1           equ	4071	;# 
   237   000FE8                     WREG            equ	4072	;# 
   238   000FE9                     FSR0            equ	4073	;# 
   239   000FE9                     FSR0L           equ	4073	;# 
   240   000FEA                     FSR0H           equ	4074	;# 
   241   000FEB                     PLUSW0          equ	4075	;# 
   242   000FEC                     PREINC0         equ	4076	;# 
   243   000FED                     POSTDEC0        equ	4077	;# 
   244   000FEE                     POSTINC0        equ	4078	;# 
   245   000FEF                     INDF0           equ	4079	;# 
   246   000FF0                     INTCON3         equ	4080	;# 
   247   000FF1                     INTCON2         equ	4081	;# 
   248   000FF2                     INTCON          equ	4082	;# 
   249   000FF3                     PROD            equ	4083	;# 
   250   000FF3                     PRODL           equ	4083	;# 
   251   000FF4                     PRODH           equ	4084	;# 
   252   000FF5                     TABLAT          equ	4085	;# 
   253   000FF6                     TBLPTR          equ	4086	;# 
   254   000FF6                     TBLPTRL         equ	4086	;# 
   255   000FF7                     TBLPTRH         equ	4087	;# 
   256   000FF8                     TBLPTRU         equ	4088	;# 
   257   000FF9                     PCLAT           equ	4089	;# 
   258   000FF9                     PC              equ	4089	;# 
   259   000FF9                     PCL             equ	4089	;# 
   260   000FFA                     PCLATH          equ	4090	;# 
   261   000FFB                     PCLATU          equ	4091	;# 
   262   000FFC                     STKPTR          equ	4092	;# 
   263   000FFD                     TOS             equ	4093	;# 
   264   000FFD                     TOSL            equ	4093	;# 
   265   000FFE                     TOSH            equ	4094	;# 
   266   000FFF                     TOSU            equ	4095	;# 
   267                           
   268                           	psect	idataCOMRAM
   269   0009BE                     __pidataCOMRAM:
   270                           	callstack 0
   271                           
   272                           ;initializer for _interfaz
   273   0009BE  08                 	db	8
   274   007C61                     _LATD1          set	31841
   275   007C60                     _LATD0          set	31840
   276   000F89                     _LATA           set	3977
   277   000F93                     _TRISB          set	3987
   278   000F92                     _TRISA          set	3986
   279   000FC1                     _ADCON1         set	4033
   280   000F8C                     _LATD           set	3980
   281                           
   282                           ; #config settings
   283                           
   284                           	psect	cinit
   285   000968                     __pcinit:
   286                           	callstack 0
   287   000968                     start_initialization:
   288                           	callstack 0
   289   000968                     __initialization:
   290                           	callstack 0
   291                           
   292                           ; Initialize objects allocated to COMRAM (1 bytes)
   293                           ; load TBLPTR registers with __pidataCOMRAM
   294   000968  0EBE               	movlw	low __pidataCOMRAM
   295   00096A  6EF6               	movwf	tblptrl,c
   296   00096C  0E09               	movlw	high __pidataCOMRAM
   297   00096E  6EF7               	movwf	tblptrh,c
   298   000970  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   299   000972  6EF8               	movwf	tblptru,c
   300   000974  0009               	tblrd		*+	;fetch initializer
   301   000976  CFF5 F007          	movff	tablat,__pdataCOMRAM
   302   00097A                     end_of_initialization:
   303                           	callstack 0
   304   00097A                     __end_of__initialization:
   305                           	callstack 0
   306   00097A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   307   00097C  6EF8               	movwf	tblptru,c
   308   00097E  0100               	movlb	0
   309   000980  EF9D  F004         	goto	_main	;jump to C main() function
   310                           
   311                           	psect	dataCOMRAM
   312   000007                     __pdataCOMRAM:
   313                           	callstack 0
   314   000007                     _interfaz:
   315                           	callstack 0
   316   000007                     	ds	1
   317                           
   318                           	psect	cstackCOMRAM
   319   000001                     __pcstackCOMRAM:
   320                           	callstack 0
   321   000001                     ConfiguraLCD@a:
   322                           	callstack 0
   323   000001                     ??_RetardoLCD:
   324   000001                     
   325                           ; 1 bytes @ 0x0
   326   000001                     	ds	1
   327   000002                     RetardoLCD@a:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x1
   331   000002                     	ds	1
   332   000003                     ??_EnviaDato:
   333                           
   334                           ; 1 bytes @ 0x2
   335   000003                     	ds	1
   336   000004                     EnviaDato@a:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x3
   340   000004                     	ds	1
   341   000005                     ??_main:
   342                           
   343                           ; 1 bytes @ 0x4
   344   000005                     	ds	2
   345                           
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 6 in file "LCDLab.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   365 ;;      Params:         0       0       0       0       0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0       0       0       0       0
   367 ;;      Temps:          2       0       0       0       0       0       0       0       0
   368 ;;      Totals:         2       0       0       0       0       0       0       0       0
   369 ;;Total ram usage:        2 bytes
   370 ;; Hardware stack levels required when called: 4
   371 ;; This function calls:
   372 ;;		_ConfiguraLCD
   373 ;;		_InicializaLCD
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text0
   380   00093A                     __ptext0:
   381                           	callstack 0
   382   00093A                     _main:
   383                           	callstack 27
   384                           
   385                           ;LCDLab.c: 7: ADCON1=15;
   386                           
   387                           ;incstack = 0
   388   00093A  0E0F               	movlw	15
   389   00093C  6EC1               	movwf	193,c	;volatile
   390                           
   391                           ;LCDLab.c: 8: TRISA=0;
   392   00093E  6A92               	clrf	146,c	;volatile
   393                           
   394                           ;LCDLab.c: 9: TRISB=0;
   395   000940  6A93               	clrf	147,c	;volatile
   396                           
   397                           ;LCDLab.c: 10: LATA=0;
   398   000942  6A89               	clrf	137,c	;volatile
   399                           
   400                           ;LCDLab.c: 11: LATD=0;
   401   000944  6A8C               	clrf	140,c	;volatile
   402                           
   403                           ;LCDLab.c: 12: _delay((unsigned long)((1000)*(1000000/4000.0)));
   404   000946  0E02               	movlw	2
   405   000948  6E06               	movwf	(??_main+1)^0,c
   406   00094A  0E45               	movlw	69
   407   00094C  6E05               	movwf	??_main^0,c
   408   00094E  0EAA               	movlw	170
   409   000950                     u97:
   410   000950  2EE8               	decfsz	wreg,f,c
   411   000952  D7FE               	bra	u97
   412   000954  2E05               	decfsz	??_main^0,f,c
   413   000956  D7FC               	bra	u97
   414   000958  2E06               	decfsz	(??_main+1)^0,f,c
   415   00095A  D7FA               	bra	u97
   416                           
   417                           ;LCDLab.c: 13: ConfiguraLCD(4);
   418   00095C  0E04               	movlw	4
   419   00095E  ECC2  F004         	call	_ConfiguraLCD
   420                           
   421                           ;LCDLab.c: 14: InicializaLCD();
   422   000962  EC01  F004         	call	_InicializaLCD	;wreg free
   423   000966                     l124:
   424   000966  D7FF               	goto	l124
   425   000968                     __end_of_main:
   426                           	callstack 0
   427                           
   428 ;; *************** function _InicializaLCD *****************
   429 ;; Defined at:
   430 ;;		line 71 in file "LibLCDXC8.h"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   444 ;;      Params:         0       0       0       0       0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 3
   451 ;; This function calls:
   452 ;;		_BorraLCD
   453 ;;		_EnviaDato
   454 ;;		_HabilitaLCD
   455 ;;		_RetardoLCD
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text1
   462   000802                     __ptext1:
   463                           	callstack 0
   464   000802                     _InicializaLCD:
   465                           	callstack 27
   466                           
   467                           ;LibLCDXC8.h: 73: LATD0=0;
   468                           
   469                           ;incstack = 0
   470   000802  908C               	bcf	3980,0,c	;volatile
   471                           
   472                           ;LibLCDXC8.h: 74: if(interfaz==4)
   473   000804  0E04               	movlw	4
   474   000806  1807               	xorwf	_interfaz^0,w,c
   475   000808  A4D8               	btfss	status,2,c
   476   00080A  D004               	goto	l927
   477                           
   478                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
   479   00080C  508C               	movf	140,w,c	;volatile
   480   00080E  0B0F               	andlw	15
   481   000810  0930               	iorlw	48
   482   000812  D001               	goto	L1
   483   000814                     l927:
   484                           
   485                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
   486   000814  0E3F               	movlw	63
   487   000816                     L1:
   488   000816  6E8C               	movwf	140,c	;volatile
   489                           
   490                           ;LibLCDXC8.h: 78: HabilitaLCD();
   491   000818  ECD8  F004         	call	_HabilitaLCD	;wreg free
   492                           
   493                           ;LibLCDXC8.h: 79: RetardoLCD(1);
   494   00081C  0E01               	movlw	1
   495   00081E  EC4F  F004         	call	_RetardoLCD
   496                           
   497                           ;LibLCDXC8.h: 80: if(interfaz==4)
   498   000822  0E04               	movlw	4
   499   000824  1807               	xorwf	_interfaz^0,w,c
   500   000826  A4D8               	btfss	status,2,c
   501   000828  D004               	goto	l937
   502                           
   503                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
   504   00082A  508C               	movf	140,w,c	;volatile
   505   00082C  0B0F               	andlw	15
   506   00082E  0930               	iorlw	48
   507   000830  D001               	goto	L2
   508   000832                     l937:
   509                           
   510                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
   511   000832  0E3F               	movlw	63
   512   000834                     L2:
   513   000834  6E8C               	movwf	140,c	;volatile
   514                           
   515                           ;LibLCDXC8.h: 84: HabilitaLCD();
   516   000836  ECD8  F004         	call	_HabilitaLCD	;wreg free
   517                           
   518                           ;LibLCDXC8.h: 85: RetardoLCD(3);
   519   00083A  0E03               	movlw	3
   520   00083C  EC4F  F004         	call	_RetardoLCD
   521                           
   522                           ;LibLCDXC8.h: 86: if(interfaz==4)
   523   000840  0E04               	movlw	4
   524   000842  1807               	xorwf	_interfaz^0,w,c
   525   000844  A4D8               	btfss	status,2,c
   526   000846  D004               	goto	l947
   527                           
   528                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
   529   000848  508C               	movf	140,w,c	;volatile
   530   00084A  0B0F               	andlw	15
   531   00084C  0930               	iorlw	48
   532   00084E  D001               	goto	L3
   533   000850                     l947:
   534                           
   535                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
   536   000850  0E3F               	movlw	63
   537   000852                     L3:
   538   000852  6E8C               	movwf	140,c	;volatile
   539                           
   540                           ;LibLCDXC8.h: 90: HabilitaLCD();
   541   000854  ECD8  F004         	call	_HabilitaLCD	;wreg free
   542                           
   543                           ;LibLCDXC8.h: 91: RetardoLCD(4);
   544   000858  0E04               	movlw	4
   545   00085A  EC4F  F004         	call	_RetardoLCD
   546                           
   547                           ;LibLCDXC8.h: 92: if(interfaz==4){
   548   00085E  0E04               	movlw	4
   549   000860  1807               	xorwf	_interfaz^0,w,c
   550   000862  A4D8               	btfss	status,2,c
   551   000864  D011               	goto	l967
   552                           
   553                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
   554   000866  508C               	movf	140,w,c	;volatile
   555   000868  0B0F               	andlw	15
   556   00086A  0920               	iorlw	32
   557   00086C  6E8C               	movwf	140,c	;volatile
   558                           
   559                           ;LibLCDXC8.h: 94: HabilitaLCD();
   560   00086E  ECD8  F004         	call	_HabilitaLCD	;wreg free
   561                           
   562                           ;LibLCDXC8.h: 95: RetardoLCD(4);
   563   000872  0E04               	movlw	4
   564   000874  EC4F  F004         	call	_RetardoLCD
   565                           
   566                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
   567   000878  0E2F               	movlw	47
   568   00087A  EC7A  F004         	call	_EnviaDato
   569                           
   570                           ;LibLCDXC8.h: 97: HabilitaLCD();
   571   00087E  ECD8  F004         	call	_HabilitaLCD	;wreg free
   572                           
   573                           ;LibLCDXC8.h: 98: RetardoLCD(4);
   574   000882  0E04               	movlw	4
   575   000884  EC4F  F004         	call	_RetardoLCD
   576   000888                     l967:
   577                           
   578                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
   579   000888  ECCE  F004         	call	_BorraLCD	;wreg free
   580                           
   581                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
   582   00088C  0E0F               	movlw	15
   583   00088E  EC7A  F004         	call	_EnviaDato
   584                           
   585                           ;LibLCDXC8.h: 102: HabilitaLCD();
   586   000892  ECD8  F004         	call	_HabilitaLCD	;wreg free
   587                           
   588                           ;LibLCDXC8.h: 103: RetardoLCD(4);
   589   000896  0E04               	movlw	4
   590   000898  EC4F  F004         	call	_RetardoLCD
   591   00089C  0012               	return		;funcret
   592   00089E                     __end_of_InicializaLCD:
   593                           	callstack 0
   594                           
   595 ;; *************** function _BorraLCD *****************
   596 ;; Defined at:
   597 ;;		line 112 in file "LibLCDXC8.h"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   611 ;;      Params:         0       0       0       0       0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; Hardware stack levels required when called: 2
   618 ;; This function calls:
   619 ;;		_EnviaDato
   620 ;;		_HabilitaLCD
   621 ;;		_RetardoLCD
   622 ;; This function is called by:
   623 ;;		_InicializaLCD
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text2
   628   00099C                     __ptext2:
   629                           	callstack 0
   630   00099C                     _BorraLCD:
   631                           	callstack 27
   632                           
   633                           ;LibLCDXC8.h: 114: LATD0=0;
   634                           
   635                           ;incstack = 0
   636   00099C  908C               	bcf	3980,0,c	;volatile
   637                           
   638                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
   639   00099E  0E01               	movlw	1
   640   0009A0  EC7A  F004         	call	_EnviaDato
   641                           
   642                           ;LibLCDXC8.h: 116: HabilitaLCD();
   643   0009A4  ECD8  F004         	call	_HabilitaLCD	;wreg free
   644                           
   645                           ;LibLCDXC8.h: 117: RetardoLCD(2);
   646   0009A8  0E02               	movlw	2
   647   0009AA  EC4F  F004         	call	_RetardoLCD
   648   0009AE  0012               	return		;funcret
   649   0009B0                     __end_of_BorraLCD:
   650                           	callstack 0
   651                           
   652 ;; *************** function _EnviaDato *****************
   653 ;; Defined at:
   654 ;;		line 59 in file "LibLCDXC8.h"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  a               1    wreg     unsigned char 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  a               1    3[COMRAM] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   668 ;;      Params:         0       0       0       0       0       0       0       0       0
   669 ;;      Locals:         1       0       0       0       0       0       0       0       0
   670 ;;      Temps:          1       0       0       0       0       0       0       0       0
   671 ;;      Totals:         2       0       0       0       0       0       0       0       0
   672 ;;Total ram usage:        2 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 1
   675 ;; This function calls:
   676 ;;		_HabilitaLCD
   677 ;;		_RetardoLCD
   678 ;; This function is called by:
   679 ;;		_InicializaLCD
   680 ;;		_BorraLCD
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text3
   685   0008F4                     __ptext3:
   686                           	callstack 0
   687   0008F4                     _EnviaDato:
   688                           	callstack 28
   689                           
   690                           ;incstack = 0
   691                           ;EnviaDato@a stored from wreg
   692   0008F4  6E04               	movwf	EnviaDato@a^0,c
   693                           
   694                           ;LibLCDXC8.h: 60: if(interfaz==4){
   695   0008F6  0E04               	movlw	4
   696   0008F8  1807               	xorwf	_interfaz^0,w,c
   697   0008FA  A4D8               	btfss	status,2,c
   698   0008FC  D017               	goto	l905
   699                           
   700                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
   701   0008FE  C004  F003         	movff	EnviaDato@a,??_EnviaDato
   702   000902  0EF0               	movlw	240
   703   000904  1603               	andwf	??_EnviaDato^0,f,c
   704   000906  508C               	movf	140,w,c	;volatile
   705   000908  0B0F               	andlw	15
   706   00090A  1003               	iorwf	??_EnviaDato^0,w,c
   707   00090C  6E8C               	movwf	140,c	;volatile
   708                           
   709                           ;LibLCDXC8.h: 62: HabilitaLCD();
   710   00090E  ECD8  F004         	call	_HabilitaLCD	;wreg free
   711                           
   712                           ;LibLCDXC8.h: 63: RetardoLCD(1);
   713   000912  0E01               	movlw	1
   714   000914  EC4F  F004         	call	_RetardoLCD
   715                           
   716                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
   717   000918  C004  F003         	movff	EnviaDato@a,??_EnviaDato
   718   00091C  3A03               	swapf	??_EnviaDato^0,f,c
   719   00091E  0EF0               	movlw	240
   720   000920  1603               	andwf	??_EnviaDato^0,f,c
   721   000922  508C               	movf	140,w,c	;volatile
   722   000924  0B0F               	andlw	15
   723   000926  1003               	iorwf	??_EnviaDato^0,w,c
   724   000928  6E8C               	movwf	140,c	;volatile
   725                           
   726                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
   727   00092A  0012               	return	
   728   00092C                     l905:
   729   00092C  0E08               	movlw	8
   730   00092E  1807               	xorwf	_interfaz^0,w,c
   731   000930  A4D8               	btfss	status,2,c
   732   000932  0012               	return	
   733                           
   734                           ;LibLCDXC8.h: 68: LATD=a;
   735   000934  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
   736   000938  0012               	return		;funcret
   737   00093A                     __end_of_EnviaDato:
   738                           	callstack 0
   739                           
   740 ;; *************** function _RetardoLCD *****************
   741 ;; Defined at:
   742 ;;		line 274 in file "LibLCDXC8.h"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  a               1    wreg     unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  a               1    1[COMRAM] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   756 ;;      Params:         0       0       0       0       0       0       0       0       0
   757 ;;      Locals:         1       0       0       0       0       0       0       0       0
   758 ;;      Temps:          1       0       0       0       0       0       0       0       0
   759 ;;      Totals:         2       0       0       0       0       0       0       0       0
   760 ;;Total ram usage:        2 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_EnviaDato
   766 ;;		_InicializaLCD
   767 ;;		_BorraLCD
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text4
   772   00089E                     __ptext4:
   773                           	callstack 0
   774   00089E                     _RetardoLCD:
   775                           	callstack 29
   776                           
   777                           ;incstack = 0
   778                           ;RetardoLCD@a stored from wreg
   779   00089E  6E02               	movwf	RetardoLCD@a^0,c
   780                           
   781                           ;LibLCDXC8.h: 275: switch(a){
   782   0008A0  D01B               	goto	l893
   783   0008A2                     l883:
   784   0008A2  0E05               	movlw	5
   785   0008A4  6E01               	movwf	??_RetardoLCD^0,c
   786   0008A6  0EDE               	movlw	222
   787   0008A8                     u107:
   788   0008A8  2EE8               	decfsz	wreg,f,c
   789   0008AA  D7FE               	bra	u107
   790   0008AC  2E01               	decfsz	??_RetardoLCD^0,f,c
   791   0008AE  D7FC               	bra	u107
   792                           
   793                           ;LibLCDXC8.h: 278: break;
   794   0008B0  0012               	return	
   795   0008B2                     l885:
   796   0008B2  0E53               	movlw	83
   797   0008B4                     u117:
   798   0008B4  2EE8               	decfsz	wreg,f,c
   799   0008B6  D7FE               	bra	u117
   800   0008B8  0000               	nop	
   801                           
   802                           ;LibLCDXC8.h: 280: _delay((unsigned long)((640)*(1000000/4000000.0)));
   803   0008BA  0E35               	movlw	53
   804   0008BC                     u127:
   805   0008BC  2EE8               	decfsz	wreg,f,c
   806   0008BE  D7FE               	bra	u127
   807   0008C0  0000               	nop	
   808                           
   809                           ;LibLCDXC8.h: 282: break;
   810   0008C2  0012               	return	
   811   0008C4                     l887:
   812   0008C4  0E08               	movlw	8
   813   0008C6                     u137:
   814   0008C6  2EE8               	decfsz	wreg,f,c
   815   0008C8  D7FE               	bra	u137
   816   0008CA  0000               	nop	
   817                           
   818                           ;LibLCDXC8.h: 285: break;
   819   0008CC  0012               	return	
   820   0008CE                     l889:
   821   0008CE  0E03               	movlw	3
   822   0008D0                     u147:
   823   0008D0  2EE8               	decfsz	wreg,f,c
   824   0008D2  D7FE               	bra	u147
   825   0008D4  0000               	nop	
   826                           
   827                           ;LibLCDXC8.h: 288: break;
   828   0008D6  0012               	return	
   829   0008D8                     l893:
   830   0008D8  5002               	movf	RetardoLCD@a^0,w,c
   831                           
   832                           ; Switch size 1, requested type "simple"
   833                           ; Number of cases is 4, Range of values is 1 to 4
   834                           ; switch strategies available:
   835                           ; Name         Instructions Cycles
   836                           ; simple_byte           13     7 (average)
   837                           ;	Chosen strategy is simple_byte
   838   0008DA  0A01               	xorlw	1	; case 1
   839   0008DC  B4D8               	btfsc	status,2,c
   840   0008DE  D7E1               	goto	l883
   841   0008E0  0A03               	xorlw	3	; case 2
   842   0008E2  B4D8               	btfsc	status,2,c
   843   0008E4  D7E6               	goto	l885
   844   0008E6  0A01               	xorlw	1	; case 3
   845   0008E8  B4D8               	btfsc	status,2,c
   846   0008EA  D7EC               	goto	l887
   847   0008EC  0A07               	xorlw	7	; case 4
   848   0008EE  A4D8               	btfss	status,2,c
   849   0008F0  0012               	return	
   850   0008F2  D7ED               	goto	l889
   851   0008F4                     __end_of_RetardoLCD:
   852                           	callstack 0
   853                           
   854 ;; *************** function _HabilitaLCD *****************
   855 ;; Defined at:
   856 ;;		line 105 in file "LibLCDXC8.h"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   870 ;;      Params:         0       0       0       0       0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0       0       0       0       0
   873 ;;      Totals:         0       0       0       0       0       0       0       0       0
   874 ;;Total ram usage:        0 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_EnviaDato
   880 ;;		_InicializaLCD
   881 ;;		_BorraLCD
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text5
   886   0009B0                     __ptext5:
   887                           	callstack 0
   888   0009B0                     _HabilitaLCD:
   889                           	callstack 29
   890                           
   891                           ;LibLCDXC8.h: 107: LATD1=1;
   892                           
   893                           ;incstack = 0
   894   0009B0  828C               	bsf	3980,1,c	;volatile
   895                           
   896                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
   897   0009B2  0E03               	movlw	3
   898   0009B4                     u157:
   899   0009B4  2EE8               	decfsz	wreg,f,c
   900   0009B6  D7FE               	bra	u157
   901   0009B8  0000               	nop	
   902                           
   903                           ;LibLCDXC8.h: 110: LATD1=0;
   904   0009BA  928C               	bcf	3980,1,c	;volatile
   905   0009BC  0012               	return		;funcret
   906   0009BE                     __end_of_HabilitaLCD:
   907                           	callstack 0
   908                           
   909 ;; *************** function _ConfiguraLCD *****************
   910 ;; Defined at:
   911 ;;		line 55 in file "LibLCDXC8.h"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  a               1    wreg     unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  a               1    0[COMRAM] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   925 ;;      Params:         0       0       0       0       0       0       0       0       0
   926 ;;      Locals:         1       0       0       0       0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0       0       0       0       0
   928 ;;      Totals:         1       0       0       0       0       0       0       0       0
   929 ;;Total ram usage:        1 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text6
   939   000984                     __ptext6:
   940                           	callstack 0
   941   000984                     _ConfiguraLCD:
   942                           	callstack 30
   943                           
   944                           ;incstack = 0
   945                           ;ConfiguraLCD@a stored from wreg
   946   000984  6E01               	movwf	ConfiguraLCD@a^0,c
   947                           
   948                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
   949   000986  0E04               	movlw	4
   950   000988  1801               	xorwf	ConfiguraLCD@a^0,w,c
   951   00098A  B4D8               	btfsc	status,2,c
   952   00098C  D004               	goto	u40
   953   00098E  0E08               	movlw	8
   954   000990  1801               	xorwf	ConfiguraLCD@a^0,w,c
   955   000992  A4D8               	btfss	status,2,c
   956   000994  0012               	return	
   957   000996                     u40:
   958                           
   959                           ;LibLCDXC8.h: 57: interfaz=a;
   960   000996  C001  F007         	movff	ConfiguraLCD@a,_interfaz
   961   00099A  0012               	return		;funcret
   962   00099C                     __end_of_ConfiguraLCD:
   963                           	callstack 0
   964                           
   965                           	psect	smallconst
   966   000800                     __psmallconst:
   967                           	callstack 0
   968   000800  00                 	db	0
   969   000801  00                 	db	0	; dummy byte at the end
   970   000002                     __activetblptr  equ	2
   971                           
   972                           	psect	rparam
   973   000001                     ___rparam_used  equ	1
   974   000000                     ___param_bank   equ	0
   975   000000                     __Lparam        equ	__Lrparam
   976   000000                     __Hparam        equ	__Hrparam
   977                           
   978                           	psect	idloc
   979                           
   980                           ;Config register IDLOC0 @ 0x200000
   981                           ;	unspecified, using default values
   982   200000                     	org	2097152
   983   200000  FF                 	db	255
   984                           
   985                           ;Config register IDLOC1 @ 0x200001
   986                           ;	unspecified, using default values
   987   200001                     	org	2097153
   988   200001  FF                 	db	255
   989                           
   990                           ;Config register IDLOC2 @ 0x200002
   991                           ;	unspecified, using default values
   992   200002                     	org	2097154
   993   200002  FF                 	db	255
   994                           
   995                           ;Config register IDLOC3 @ 0x200003
   996                           ;	unspecified, using default values
   997   200003                     	org	2097155
   998   200003  FF                 	db	255
   999                           
  1000                           ;Config register IDLOC4 @ 0x200004
  1001                           ;	unspecified, using default values
  1002   200004                     	org	2097156
  1003   200004  FF                 	db	255
  1004                           
  1005                           ;Config register IDLOC5 @ 0x200005
  1006                           ;	unspecified, using default values
  1007   200005                     	org	2097157
  1008   200005  FF                 	db	255
  1009                           
  1010                           ;Config register IDLOC6 @ 0x200006
  1011                           ;	unspecified, using default values
  1012   200006                     	org	2097158
  1013   200006  FF                 	db	255
  1014                           
  1015                           ;Config register IDLOC7 @ 0x200007
  1016                           ;	unspecified, using default values
  1017   200007                     	org	2097159
  1018   200007  FF                 	db	255
  1019                           
  1020                           	psect	config
  1021                           
  1022                           ;Config register CONFIG1L @ 0x300000
  1023                           ;	unspecified, using default values
  1024                           ;	PLL Prescaler Selection bits
  1025                           ;	PLLDIV = 0x0, unprogrammed default
  1026                           ;	System Clock Postscaler Selection bits
  1027                           ;	CPUDIV = 0x0, unprogrammed default
  1028                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1029                           ;	USBDIV = 0x0, unprogrammed default
  1030   300000                     	org	3145728
  1031   300000  00                 	db	0
  1032                           
  1033                           ;Config register CONFIG1H @ 0x300001
  1034                           ;	Oscillator Selection bits
  1035                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1036                           ;	Fail-Safe Clock Monitor Enable bit
  1037                           ;	FCMEN = 0x0, unprogrammed default
  1038                           ;	Internal/External Oscillator Switchover bit
  1039                           ;	IESO = 0x0, unprogrammed default
  1040   300001                     	org	3145729
  1041   300001  09                 	db	9
  1042                           
  1043                           ;Config register CONFIG2L @ 0x300002
  1044                           ;	unspecified, using default values
  1045                           ;	Power-up Timer Enable bit
  1046                           ;	PWRT = 0x1, unprogrammed default
  1047                           ;	Brown-out Reset Enable bits
  1048                           ;	BOR = 0x3, unprogrammed default
  1049                           ;	Brown-out Reset Voltage bits
  1050                           ;	BORV = 0x3, unprogrammed default
  1051                           ;	USB Voltage Regulator Enable bit
  1052                           ;	VREGEN = 0x0, unprogrammed default
  1053   300002                     	org	3145730
  1054   300002  1F                 	db	31
  1055                           
  1056                           ;Config register CONFIG2H @ 0x300003
  1057                           ;	Watchdog Timer Enable bit
  1058                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1059                           ;	Watchdog Timer Postscale Select bits
  1060                           ;	WDTPS = 0xF, unprogrammed default
  1061   300003                     	org	3145731
  1062   300003  1E                 	db	30
  1063                           
  1064                           ; Padding undefined space
  1065   300004                     	org	3145732
  1066   300004  FF                 	db	255
  1067                           
  1068                           ;Config register CONFIG3H @ 0x300005
  1069                           ;	unspecified, using default values
  1070                           ;	CCP2 MUX bit
  1071                           ;	CCP2MX = 0x1, unprogrammed default
  1072                           ;	PORTB A/D Enable bit
  1073                           ;	PBADEN = 0x1, unprogrammed default
  1074                           ;	Low-Power Timer 1 Oscillator Enable bit
  1075                           ;	LPT1OSC = 0x0, unprogrammed default
  1076                           ;	MCLR Pin Enable bit
  1077                           ;	MCLRE = 0x1, unprogrammed default
  1078   300005                     	org	3145733
  1079   300005  83                 	db	131
  1080                           
  1081                           ;Config register CONFIG4L @ 0x300006
  1082                           ;	unspecified, using default values
  1083                           ;	Stack Full/Underflow Reset Enable bit
  1084                           ;	STVREN = 0x1, unprogrammed default
  1085                           ;	Single-Supply ICSP Enable bit
  1086                           ;	LVP = 0x1, unprogrammed default
  1087                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1088                           ;	ICPRT = 0x0, unprogrammed default
  1089                           ;	Extended Instruction Set Enable bit
  1090                           ;	XINST = 0x0, unprogrammed default
  1091                           ;	Background Debugger Enable bit
  1092                           ;	DEBUG = 0x1, unprogrammed default
  1093   300006                     	org	3145734
  1094   300006  85                 	db	133
  1095                           
  1096                           ; Padding undefined space
  1097   300007                     	org	3145735
  1098   300007  FF                 	db	255
  1099                           
  1100                           ;Config register CONFIG5L @ 0x300008
  1101                           ;	unspecified, using default values
  1102                           ;	Code Protection bit
  1103                           ;	CP0 = 0x1, unprogrammed default
  1104                           ;	Code Protection bit
  1105                           ;	CP1 = 0x1, unprogrammed default
  1106                           ;	Code Protection bit
  1107                           ;	CP2 = 0x1, unprogrammed default
  1108                           ;	Code Protection bit
  1109                           ;	CP3 = 0x1, unprogrammed default
  1110   300008                     	org	3145736
  1111   300008  0F                 	db	15
  1112                           
  1113                           ;Config register CONFIG5H @ 0x300009
  1114                           ;	unspecified, using default values
  1115                           ;	Boot Block Code Protection bit
  1116                           ;	CPB = 0x1, unprogrammed default
  1117                           ;	Data EEPROM Code Protection bit
  1118                           ;	CPD = 0x1, unprogrammed default
  1119   300009                     	org	3145737
  1120   300009  C0                 	db	192
  1121                           
  1122                           ;Config register CONFIG6L @ 0x30000A
  1123                           ;	unspecified, using default values
  1124                           ;	Write Protection bit
  1125                           ;	WRT0 = 0x1, unprogrammed default
  1126                           ;	Write Protection bit
  1127                           ;	WRT1 = 0x1, unprogrammed default
  1128                           ;	Write Protection bit
  1129                           ;	WRT2 = 0x1, unprogrammed default
  1130                           ;	Write Protection bit
  1131                           ;	WRT3 = 0x1, unprogrammed default
  1132   30000A                     	org	3145738
  1133   30000A  0F                 	db	15
  1134                           
  1135                           ;Config register CONFIG6H @ 0x30000B
  1136                           ;	unspecified, using default values
  1137                           ;	Configuration Register Write Protection bit
  1138                           ;	WRTC = 0x1, unprogrammed default
  1139                           ;	Boot Block Write Protection bit
  1140                           ;	WRTB = 0x1, unprogrammed default
  1141                           ;	Data EEPROM Write Protection bit
  1142                           ;	WRTD = 0x1, unprogrammed default
  1143   30000B                     	org	3145739
  1144   30000B  E0                 	db	224
  1145                           
  1146                           ;Config register CONFIG7L @ 0x30000C
  1147                           ;	unspecified, using default values
  1148                           ;	Table Read Protection bit
  1149                           ;	EBTR0 = 0x1, unprogrammed default
  1150                           ;	Table Read Protection bit
  1151                           ;	EBTR1 = 0x1, unprogrammed default
  1152                           ;	Table Read Protection bit
  1153                           ;	EBTR2 = 0x1, unprogrammed default
  1154                           ;	Table Read Protection bit
  1155                           ;	EBTR3 = 0x1, unprogrammed default
  1156   30000C                     	org	3145740
  1157   30000C  0F                 	db	15
  1158                           
  1159                           ;Config register CONFIG7H @ 0x30000D
  1160                           ;	unspecified, using default values
  1161                           ;	Boot Block Table Read Protection bit
  1162                           ;	EBTRB = 0x1, unprogrammed default
  1163   30000D                     	org	3145741
  1164   30000D  40                 	db	64
  1165                           tosu	equ	0xFFF
  1166                           tosh	equ	0xFFE
  1167                           tosl	equ	0xFFD
  1168                           stkptr	equ	0xFFC
  1169                           pclatu	equ	0xFFB
  1170                           pclath	equ	0xFFA
  1171                           pcl	equ	0xFF9
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           prodh	equ	0xFF4
  1177                           prodl	equ	0xFF3
  1178                           indf0	equ	0xFEF
  1179                           postinc0	equ	0xFEE
  1180                           postdec0	equ	0xFED
  1181                           preinc0	equ	0xFEC
  1182                           plusw0	equ	0xFEB
  1183                           fsr0h	equ	0xFEA
  1184                           fsr0l	equ	0xFE9
  1185                           wreg	equ	0xFE8
  1186                           indf1	equ	0xFE7
  1187                           postinc1	equ	0xFE6
  1188                           postdec1	equ	0xFE5
  1189                           preinc1	equ	0xFE4
  1190                           plusw1	equ	0xFE3
  1191                           fsr1h	equ	0xFE2
  1192                           fsr1l	equ	0xFE1
  1193                           bsr	equ	0xFE0
  1194                           indf2	equ	0xFDF
  1195                           postinc2	equ	0xFDE
  1196                           postdec2	equ	0xFDD
  1197                           preinc2	equ	0xFDC
  1198                           plusw2	equ	0xFDB
  1199                           fsr2h	equ	0xFDA
  1200                           fsr2l	equ	0xFD9
  1201                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     195
                                              4 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
   _InicializaLCD
     _BorraLCD
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         118      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      6       7      7.4%
BITBIGSFRl          41      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jun 19 14:26:37 2025

                     u40 0996                       u97 0950               EnviaDato@a 0004  
                    l124 0966            _InicializaLCD 0802                      l905 092C  
                    l927 0814                      l937 0832                      l883 08A2  
                    l947 0850                      l885 08B2                      l893 08D8  
                    l887 08C4                      l967 0888                      l889 08CE  
                    u107 08A8                      u117 08B4                      u127 08BC  
                    u137 08C6                      u147 08D0                      u157 09B4  
                    wreg 0FE8                     _LATA 0F89                     _LATD 0F8C  
                   _main 093A                     start 0000             ___param_bank 0000  
         ?_InicializaLCD 0001                    ?_main 0001                    _LATD0 7C60  
                  _LATD1 7C61                    _TRISA 0F92                    _TRISB 0F93  
                  tablat 0FF5              _HabilitaLCD 09B0                    status 0FD8  
       __end_of_BorraLCD 09B0          __initialization 0968             __end_of_main 0968  
                 ??_main 0005     __end_of_ConfiguraLCD 099C            __activetblptr 0002  
                 _ADCON1 0FC1               _RetardoLCD 089E          ??_InicializaLCD 0005  
                 isa$std 0001             __pdataCOMRAM 0007             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 097A            ___rparam_used 0001  
         __pcstackCOMRAM 0001        __end_of_EnviaDato 093A                ?_BorraLCD 0001  
            ?_RetardoLCD 0001              RetardoLCD@a 0002               ??_BorraLCD 0005  
           ?_HabilitaLCD 0001             _ConfiguraLCD 0984                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 0968  
                __ramtop 0800                  __ptext0 093A                  __ptext1 0802  
                __ptext2 099C                  __ptext3 08F4                  __ptext4 089E  
                __ptext5 09B0                  __ptext6 0984     end_of_initialization 097A  
          __Lmediumconst 0000            __pidataCOMRAM 09BE    __end_of_InicializaLCD 089E  
              _EnviaDato 08F4      start_initialization 0968             ??_RetardoLCD 0001  
             ?_EnviaDato 0001       __end_of_RetardoLCD 08F4              __smallconst 0800  
            ??_EnviaDato 0003                 _BorraLCD 099C                 __Hrparam 0000  
               __Lrparam 0000            ConfiguraLCD@a 0001                 _interfaz 0007  
               isa$xinst 0000            ??_HabilitaLCD 0001            ?_ConfiguraLCD 0001  
         ??_ConfiguraLCD 0001      __end_of_HabilitaLCD 09BE  
